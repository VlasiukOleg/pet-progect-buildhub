{"version":3,"file":"static/js/793.a381c513.chunk.js","mappings":"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","sources":["Components/StorageSelectedModal/StorageSelectedModal.jsx","Components/StorageMap/StorageMap.styled.js","Components/StorageMap/StorageMap.jsx","pages/HomePage.jsx","redux/selectors.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@mui/material/Avatar';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\nimport PersonIcon from '@mui/icons-material/Person';\n\nimport { blue } from '@mui/material/colors';\n\nconst deliveryType = [\n  { type: 'delivery', text: 'Доставка автотранспортом' },\n  { type: 'pickup', text: 'Самовивіз зі складу' },\n];\n\nexport const StorageSelectedModal = props => {\n  const { onClose, selectedValue, open } = props;\n\n  const handleClose = () => {\n    onClose('');\n  };\n\n  const handleListItemClick = value => {\n    onClose(value);\n  };\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle>{selectedValue}</DialogTitle>\n      <DialogTitle> Виберіть тип доставки</DialogTitle>\n      <List sx={{ pt: 0 }}>\n        {deliveryType.map(({ type, text }) => (\n          <>\n            <ListItem disableGutters key={type}>\n              <ListItemButton onClick={() => handleListItemClick(type)}>\n                <ListItemAvatar>\n                  <Avatar sx={{ bgcolor: blue[100], color: blue[600] }}>\n                    <PersonIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary={text} />\n              </ListItemButton>\n            </ListItem>\n          </>\n        ))}\n      </List>\n    </Dialog>\n  );\n};\n\nStorageSelectedModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const CityBtn = styled.button`\n  position: absolute;\n  //   top: 214px;\n  left: ${props => {\n    if (props.number === 1) {\n      return '45%';\n    }\n    if (props.number === 2) {\n      return '51%';\n    }\n    if (props.number === 3) {\n      return '30%';\n    }\n    if (props.number === 4) {\n      return '71%';\n    }\n  }};\n\n  top: ${props => {\n    if (props.number === 1) {\n      return '28%';\n    }\n    if (props.number === 2) {\n      return '46%';\n    }\n    if (props.number === 3) {\n      return '39%';\n    }\n    if (props.number === 4) {\n      return '53%';\n    }\n  }};\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 20px;\n  height: 20px;\n\n  color: ${({ theme }) => theme.colors.darkAccent};\n  font-weight: 700;\n  background-color: ${({ theme }) => theme.colors.accent};\n  border-radius: 50%;\n\n  border: 2px solid ${({ theme }) => theme.colors.darkAccent};\n  cursor: pointer;\n\n  transition: transform 250ms ease-in-out;\n\n  &:hover {\n    transform: scale(1.2);\n  }\n`;\n\nexport const StorageMapWrap = styled.div`\n  position: relative;\n  text-align: center;\n`;\n\nexport const Image = styled.img`\n  margin: 0 auto;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  font-size: 20px;\n  margin-bottom: 10px;\n`;\n","import { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getDeliveryType, getDeliveryStorage } from '../../redux/selectors';\nimport { setDeliveryType, setDeliveryStorage } from '../../redux/deliverySlice';\n\nimport map from '../../images/kiev_district.jpg';\nimport { useState } from 'react';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\n\nimport { StorageSelectedModal } from 'Components/StorageSelectedModal/StorageSelectedModal';\n\nimport { CityBtn, StorageMapWrap, Image, Title } from './StorageMap.styled';\n\nconst storages = [\n  { id: 1, location: 'Київ, вул. Марка Вовчка, 14 (Куренівка)' },\n  { id: 2, location: 'Київ, пров. Деревообробний , 5  (Видубичі)' },\n  { id: 3, location: 'Київ, пр-т Перемоги, 67. корпус-Nb (м. Нивки)' },\n  { id: 4, location: 'Київ, вул.Бориспільська, 7' },\n];\n\nexport const StorageMap = () => {\n  const dispatch = useDispatch();\n  const deliveryType = useSelector(getDeliveryType);\n  const deliveryStorage = useSelector(getDeliveryStorage);\n\n  const navigate = useNavigate();\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState('');\n\n  const handleClickOpen = storageLocation => {\n    setOpen(true);\n    setSelectedValue(storageLocation);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    dispatch(setDeliveryType(value));\n    dispatch(setDeliveryStorage(selectedValue));\n\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  const handleClickNextPage = () => {\n    navigate('/materials');\n  };\n\n  return (\n    <StorageMapWrap>\n      <Title>Оберіть найближчий до Вас склад завантаження</Title>\n\n      {storages.map(storage => (\n        <CityBtn\n          type=\"button\"\n          number={storage.id}\n          onClick={() => handleClickOpen(storage.location)}\n        >\n          {storage.id}\n        </CityBtn>\n      ))}\n\n      <Image src={map} alt=\"map of kiyv\" width={600}></Image>\n      <StorageSelectedModal\n        selectedValue={selectedValue}\n        open={open}\n        onClose={handleClose}\n      />\n      {deliveryStorage && (\n        <Typography variant=\"subtitle1\" component=\"div\">\n          Склад: {deliveryStorage}\n        </Typography>\n      )}\n\n      {deliveryType && (\n        <Typography variant=\"subtitle1\" component=\"div\">\n          Тип доставки:{' '}\n          {deliveryType === 'pickup' ? 'Самовивіз' : 'Доставка автотранспортом'}\n        </Typography>\n      )}\n      <Button variant=\"contained\" onClick={handleClickNextPage} sx={{ mt: 2 }}>\n        Продовжити\n      </Button>\n    </StorageMapWrap>\n  );\n};\n","import { Container } from 'Components/Container/Container';\nimport { StorageMap } from 'Components/StorageMap/StorageMap';\n\nexport default function Home({ materials, onChangeQuantity }) {\n  return (\n    <Container>\n      <StorageMap />\n    </Container>\n  );\n}\n","export const getMaterials = state => state.materials;\n\nexport const getDeliveryType = state => state.delivery.deliveryType;\nexport const getDeliveryPrice = state => state.delivery.deliveryPrice;\nexport const getDeliveryStorage = state => state.delivery.deliveryStorage;\n\nexport const getMovingPrice = state => state.moving.movingPrice;\n"],"names":["deliveryType","type","text","StorageSelectedModal","props","onClose","selectedValue","open","Dialog","DialogTitle","List","sx","pt","map","ListItem","disableGutters","ListItemButton","onClick","ListItemAvatar","Avatar","bgcolor","blue","color","Person","ListItemText","primary","CityBtn","styled","number","theme","colors","darkAccent","accent","StorageMapWrap","Image","Title","storages","id","location","StorageMap","dispatch","useDispatch","useSelector","getDeliveryType","deliveryStorage","getDeliveryStorage","navigate","useNavigate","useState","setOpen","setSelectedValue","storage","storageLocation","src","alt","width","value","setDeliveryType","setDeliveryStorage","window","scrollTo","top","document","documentElement","scrollHeight","behavior","Typography","variant","component","Button","mt","Home","materials","onChangeQuantity","Container","getMaterials","state","delivery","getDeliveryPrice","deliveryPrice","getMovingPrice","moving","movingPrice"],"sourceRoot":""}