{"version":3,"file":"static/js/368.a8595bca.chunk.js","mappings":"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","sources":["Components/CategoriesList/CategoriesList.styled.js","Components/OrderBar/OrderBar.styled.js","Components/CategoryBar/CategoryBar.jsx","Components/OrderBar/OrderBar.jsx","Components/CategoriesList/CategoriesList.jsx","pages/HomePage.styled.js","pages/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CategoryWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 30px;\n  margin-bottom: 20px;\n  border: 2px solid #5f9ea0;\n  padding: 10px 20px;\n  border-radius: 5px;\n`;\n\nexport const CategoryInnerWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const CategoryNumber = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  background-color: #5f9ea0;\n  color: #ffffff;\n  font-weight: 500;\n  margin-right: 10px;\n`;\n\nexport const CategoryTitle = styled.div`\n  color: #696969;\n  font-weight: 500;\n`;\nexport const ToogleCategoryBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: 700;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  color: #696969;\n  cursor: pointer;\n\n  &:hover {\n    color: #5f9ea0;\n  }\n`;\n\nexport const MaterialsWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n\n  margin-bottom: 20px;\n`;\n\nexport const ImgWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  max-width: 150px;\n  max-height: 150px;\n  border-radius: 5px;\n  border: 1px solid #5f9ea0;\n  overflow: hidden;\n`;\n\nexport const InfoWrap = styled.div`\n  max-width: 500px;\n\n  h2 {\n    font-size: 18px;\n    margin-bottom: 10px;\n    color: #696969;\n    text-decoration: underline;\n  }\n\n  p {\n    font-size: 12px;\n    margin-bottom: 10px;\n    color: #696969;\n  }\n`;\n\nexport const Price = styled.div`\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const IncreaseBtn = styled.button`\n  width: 24px;\n  height: 24px;\n  border-radius: 2px;\n  background-color: #5f9ea0;\n  font-weight: 700;\n  color: #ffffff;\n  border: none;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const DecreaseBtn = styled.button`\n  width: 24px;\n  height: 24px;\n  font-weight: 700;\n  border-radius: 2px;\n  background-color: #5f9ea0;\n  color: #ffffff;\n  border: none;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const Input = styled.input`\n  max-width: 60px;\n  font-size: 28px;\n  outline: none;\n  border: none;\n  text-align: center;\n`;\n\nexport const QuantityWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const TotalPrice = styled.div`\n  font-size: 28px;\n  padding: 10px;\n  border: 1px solid #5f9ea0;\n  border-radius: 5px;\n`;\n\nexport const OrderBtnWrap = styled.div`\n  text-align: center;\n  margin-top: 50px;\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const OrderWrap = styled.div`\n  position: fixed;\n  top: 0;\n  left: 130px;\n  width: 1200px;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 50px;\n\n  padding: 5px 30px;\n  color: #ffffff;\n  background-color: #5f9ea0;\n  border-radius: 10px;\n`;\n\nexport const WeightWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 5px;\n  border-radius: 5px;\n  background-color: #ffffff;\n  color: #696969;\n\n  span {\n    font-weight: 700;\n    margin-left: 5px;\n  }\n`;\nexport const TotalPriceWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  span {\n    display: inline-block;\n    font-weight: 700;\n    margin-left: 5px;\n    padding: 5px;\n    border-radius: 5px;\n    background-color: #ffffff;\n    color: #696969;\n  }\n`;\n\nexport const Sum = styled.div`\n  margin-left: 2px;\n  font-size: 18px;\n`;\n\nexport const OrderButton = styled(Link)`\n  border: none;\n  outline: none;\n  background-color: rgb(23 89 92);\n  color: #fff;\n  margin-left: 10px;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: transform 250ms ease-in-out;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n","import { BiSolidDownArrow, BiSolidUpArrow } from 'react-icons/bi';\nimport {\n  CategoryWrap,\n  CategoryInnerWrap,\n  CategoryNumber,\n  CategoryTitle,\n  ToogleCategoryBtn,\n} from 'Components/CategoriesList/CategoriesList.styled';\n\nexport const CategoryBar = ({\n  number,\n  title,\n  isCategoryOpen,\n  index,\n  onCategoryOpen,\n}) => {\n  return (\n    <CategoryWrap>\n      <CategoryInnerWrap>\n        <CategoryNumber>{number}</CategoryNumber>\n        <CategoryTitle>{title}</CategoryTitle>\n      </CategoryInnerWrap>\n      <ToogleCategoryBtn onClick={() => onCategoryOpen(index)} type=\"button\">\n        {!isCategoryOpen ? 'Розгорнути' : 'Згорнути'}\n        {!isCategoryOpen ? (\n          <BiSolidDownArrow size=\"18px\" />\n        ) : (\n          <BiSolidUpArrow size=\"18px\" />\n        )}\n      </ToogleCategoryBtn>\n    </CategoryWrap>\n  );\n};\n","import {\n  OrderWrap,\n  WeightWrap,\n  TotalPriceWrap,\n  Sum,\n  OrderButton,\n} from './OrderBar.styled';\n\nimport { IoPricetagsOutline } from 'react-icons/io5';\nimport { TbWeight } from 'react-icons/tb';\n\nexport const OrderBar = ({ weight, total, quantity }) => {\n  return (\n    <OrderWrap>\n      <p>Кількість товарів: {quantity} </p>\n      <WeightWrap>\n        <TbWeight size=\"18px\" /> Вага <span>{weight} кг</span>{' '}\n      </WeightWrap>\n      <TotalPriceWrap>\n        <IoPricetagsOutline size=\"18px\" />\n        <Sum>Сума: </Sum> <span>{total} грн.</span>\n        <OrderButton to=\"/order\" type=\"button\">\n          Замовити\n        </OrderButton>\n      </TotalPriceWrap>\n    </OrderWrap>\n  );\n};\n","import {\n  MaterialsWrap,\n  ImgWrap,\n  InfoWrap,\n  Price,\n  IncreaseBtn,\n  DecreaseBtn,\n  Input,\n  QuantityWrap,\n  TotalPrice,\n  OrderBtnWrap,\n} from './CategoriesList.styled';\n\nimport { OrderButton } from 'Components/OrderBar/OrderBar.styled';\n\nimport { CategoryBar } from 'Components/CategoryBar/CategoryBar';\n\nimport products from '../../products/products.json';\n\nimport { useEffect, useState } from 'react';\n\nimport { OrderBar } from 'Components/OrderBar/OrderBar';\n\nimport { TbTruckDelivery } from 'react-icons/tb';\nimport { GiWeightLiftingUp } from 'react-icons/gi';\n\nexport const MaterialsCategoriesList = () => {\n  const [materials, setMaterials] = useState([]);\n  const [isDeliveryOpen, setIsDeliveryOpen] = useState(false);\n  const [isMovingOpen, setIsMovingOpen] = useState(false);\n  const [deliveryPrice, setDelivery] = useState(0);\n  const [totalMaterialsPrice, setTotalMaterialsPrice] = useState(0);\n\n  const groupMaterials = materials.flatMap(material => material.materials);\n\n  const total = groupMaterials.reduce((acc, value) => {\n    return acc + value.price * value.quantity;\n  }, 0);\n\n  useEffect(() => {\n    setMaterials([...products]);\n    setTotalMaterialsPrice(prevState => prevState + total);\n  }, [total]);\n\n  const onAddMovingPrice = () => {};\n\n  const onChangeQuantity = (index, ind, value) => {\n    const updateQuantityField = [...materials];\n    updateQuantityField[index].materials[ind].quantity =\n      Number(updateQuantityField[index].materials[ind].quantity) + value;\n    setMaterials(updateQuantityField);\n  };\n\n  const onCategoryOpen = index => {\n    if (index === 100) {\n      setIsDeliveryOpen(prevState => !prevState);\n      return;\n    }\n    if (index === 200) {\n      setIsMovingOpen(prevState => !prevState);\n      return;\n    }\n    const updatedMaterials = [...materials];\n\n    updatedMaterials[index].isCategoryOpen =\n      !updatedMaterials[index].isCategoryOpen;\n\n    setMaterials(updatedMaterials);\n  };\n\n  const handleChange = (e, index, ind) => {\n    const updateQuantityField = [...materials];\n    updateQuantityField[index].materials[ind].quantity = e.currentTarget.value;\n    setMaterials(updateQuantityField);\n  };\n\n  const totalWeight = groupMaterials.reduce((acc, value) => {\n    return acc + value.weight * value.quantity;\n  }, 0);\n\n  const onAddDeliveryToOrder = value => {\n    setTotalMaterialsPrice(prevState => prevState + value);\n  };\n\n  const totalQuantity = groupMaterials.reduce((acc, value) => {\n    return acc + value.quantity;\n  }, 0);\n\n  const deliveryCost = (value, weight) => {\n    console.log(value.target.value);\n    console.log(weight);\n    if (weight > 0 && weight <= 2000) {\n      setDelivery(800);\n    } else if (weight > 2000 && weight <= 3000) {\n      setDelivery(1200);\n    } else if (weight > 3000 && weight <= 5000) {\n      setDelivery(1500);\n    } else if (weight > 5000 && weight <= 10000) {\n      setDelivery(2000);\n    } else {\n      setDelivery('розраховується індивідуально');\n    }\n  };\n\n  // deliveryCost(totalWeight);\n\n  return (\n    <>\n      {totalQuantity > 0 && (\n        <OrderBar\n          quantity={totalQuantity}\n          weight={totalWeight.toFixed(2)}\n          total={totalMaterialsPrice.toFixed(2)}\n        />\n      )}\n      {materials.map((product, index) => {\n        console.log(product);\n        return (\n          <>\n            <CategoryBar\n              number={product.number}\n              title={product.categoryTitle}\n              index={index}\n              isCategoryOpen={product.isCategoryOpen}\n              onCategoryOpen={onCategoryOpen}\n            />\n            {product.isCategoryOpen &&\n              product.materials.map((material, ind) => {\n                const totalPrice = material.quantity * material.price;\n                return (\n                  <MaterialsWrap>\n                    <ImgWrap>\n                      <img src={material.image} alt={material.title} />\n                    </ImgWrap>\n\n                    <InfoWrap>\n                      <h2>{material.title}</h2>\n                      <p>{material.description}</p>\n                      <Price>Ціна: {material.price} грн.</Price>\n                    </InfoWrap>\n                    <QuantityWrap>\n                      <DecreaseBtn\n                        onClick={() => onChangeQuantity(index, ind, -1)}\n                        disabled={material.quantity === 0}\n                      >\n                        -\n                      </DecreaseBtn>\n                      <Input\n                        type=\"text\"\n                        name=\"quantity\"\n                        value={material.quantity}\n                        onChange={e => handleChange(e, index, ind)}\n                      />\n                      <IncreaseBtn\n                        onClick={() => onChangeQuantity(index, ind, 1)}\n                      >\n                        +\n                      </IncreaseBtn>\n                    </QuantityWrap>\n                    <TotalPrice>{totalPrice.toFixed(2)} грн.</TotalPrice>\n                  </MaterialsWrap>\n                );\n              })}\n          </>\n        );\n      })}\n      <CategoryBar\n        number={<TbTruckDelivery size={16} color=\"#fff\" />}\n        title={'Доставка'}\n        index={100}\n        isCategoryOpen={isDeliveryOpen}\n        onCategoryOpen={onCategoryOpen}\n      />\n      {isDeliveryOpen && (\n        <>\n          <div>\n            <label>\n              Виберіть місто доставки\n              <select\n                name=\"city\"\n                onChange={e => {\n                  deliveryCost(e, totalWeight);\n                }}\n              >\n                <option value=\"Київ\">Київ</option>\n                <option value=\"Ірпінь\">Ірпінь</option>\n              </select>\n            </label>\n          </div>\n          <div> Вартість доставки: {deliveryPrice} грн.</div>\n          <button\n            type=\"button\"\n            onClick={() => onAddDeliveryToOrder(deliveryPrice)}\n          >\n            Додати до замовлення\n          </button>\n        </>\n      )}\n      <CategoryBar\n        number={<GiWeightLiftingUp size={16} color=\"#fff\" />}\n        title={'Розвантаження'}\n        index={200}\n        isCategoryOpen={isMovingOpen}\n        onCategoryOpen={onCategoryOpen}\n      />\n      {isMovingOpen && (\n        <>\n          <div>Загальна вага замовлення - {totalWeight} кг.</div>\n          <div>Вартість вантажників - {totalWeight * 0.6} грн.</div>\n          <button type=\"button\" onClick={onAddMovingPrice}>\n            Додати до замовлення\n          </button>\n        </>\n      )}\n      {totalQuantity > 0 && (\n        <OrderBtnWrap>\n          <OrderButton to=\"/order\" type=\"button\">\n            Переглянути та оформити замовлення\n          </OrderButton>\n        </OrderBtnWrap>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\n\n\nexport const Title = styled.h1`\ntext-align: center;\nfont-size: 22px;\n\n`","import { MaterialsCategoriesList } from 'Components/CategoriesList/CategoriesList';\nimport { Container } from 'Components/Container/Container';\n\nimport { Title } from './HomePage.styled';\n\nexport default function Home() {\n  return (\n    <Container>\n      <Title>Замовлення матеріалів для ручної та машинної штукатурки</Title>\n      <MaterialsCategoriesList />\n    </Container>\n  );\n}\n"],"names":["CategoryWrap","styled","CategoryInnerWrap","CategoryNumber","CategoryTitle","ToogleCategoryBtn","MaterialsWrap","ImgWrap","InfoWrap","Price","IncreaseBtn","DecreaseBtn","Input","QuantityWrap","TotalPrice","OrderBtnWrap","OrderWrap","WeightWrap","TotalPriceWrap","Sum","OrderButton","Link","CategoryBar","number","title","isCategoryOpen","index","onCategoryOpen","onClick","type","size","OrderBar","weight","total","quantity","to","MaterialsCategoriesList","useState","materials","setMaterials","isDeliveryOpen","setIsDeliveryOpen","isMovingOpen","setIsMovingOpen","deliveryPrice","setDelivery","totalMaterialsPrice","setTotalMaterialsPrice","groupMaterials","flatMap","material","reduce","acc","value","price","useEffect","products","prevState","onChangeQuantity","ind","updateQuantityField","Number","updatedMaterials","totalWeight","totalQuantity","toFixed","map","product","console","log","categoryTitle","totalPrice","src","image","alt","description","disabled","name","onChange","e","currentTarget","handleChange","color","target","Title","Home","Container"],"sourceRoot":""}