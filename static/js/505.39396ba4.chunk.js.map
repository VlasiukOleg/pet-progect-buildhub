{"version":3,"file":"static/js/505.39396ba4.chunk.js","mappings":"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","sources":["Components/StorageSelectedModal/StorageSelectedModal.styled.js","Components/StorageSelectedModal/StorageSelectedModal.jsx","Components/StorageMap/StorageMap.styled.js","Components/StorageMap/StorageMap.jsx","pages/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport DialogTitle from '@mui/material/DialogTitle';\n\nexport const StyledDialogTitle = styled(DialogTitle)`\n  color: ${({ theme }) => theme.colors.primary};\n  font-weight: 700;\n`;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@mui/material/Avatar';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\nimport PersonIcon from '@mui/icons-material/Person';\nimport LocalShippingIcon from '@mui/icons-material/LocalShipping';\nimport { StyledDialogTitle } from './StorageSelectedModal.styled';\n\nimport { teal } from '@mui/material/colors';\n\nconst deliveryType = [\n  { type: 'delivery', text: 'Доставка автотранспортом' },\n  { type: 'pickup', text: 'Самовивіз зі складу' },\n];\n\nexport const StorageSelectedModal = props => {\n  const { onClose, selectedValue, open } = props;\n\n  const handleListItemClick = deliveryType => {\n    onClose(deliveryType);\n  };\n\n  return (\n    <Dialog open={open}>\n      <DialogTitle sx={{ fontSize: 16 }}>{selectedValue}</DialogTitle>\n      <StyledDialogTitle sx={{ fontWeight: 700 }}>\n        {' '}\n        Виберіть тип доставки:\n      </StyledDialogTitle>\n      <List sx={{ pt: 0 }}>\n        {deliveryType.map(({ type, text }) => (\n          <>\n            <ListItem disableGutters key={type}>\n              <ListItemButton onClick={() => handleListItemClick(type)}>\n                <ListItemAvatar>\n                  <Avatar sx={{ bgcolor: teal[50], color: teal[600] }}>\n                    {type === 'delivery' ? (\n                      <LocalShippingIcon />\n                    ) : (\n                      <PersonIcon />\n                    )}\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary={text} sx={{ color: teal[600] }} />\n              </ListItemButton>\n            </ListItem>\n          </>\n        ))}\n      </List>\n    </Dialog>\n  );\n};\n\nStorageSelectedModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const CityBtn = styled.button`\n  position: absolute;\n  left: ${props => {\n    if (props.number === 1) {\n      return '45%';\n    }\n    if (props.number === 2) {\n      return '51%';\n    }\n    if (props.number === 3) {\n      return '30%';\n    }\n    if (props.number === 4) {\n      return '68%';\n    }\n  }};\n\n  top: ${props => {\n    if (props.number === 1) {\n      return '35%';\n    }\n    if (props.number === 2) {\n      return '51%';\n    }\n    if (props.number === 3) {\n      return '41%';\n    }\n    if (props.number === 4) {\n      return '57%';\n    }\n  }};\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 20px;\n  height: 20px;\n\n  color: ${({ theme }) => theme.colors.darkAccent};\n  font-weight: 700;\n  background-color: ${({ theme, active, number }) =>\n    number === active ? 'white' : theme.colors.accent};\n  border-radius: 50%;\n\n  border: 2px solid ${({ theme }) => theme.colors.darkAccent};\n  cursor: pointer;\n\n  transition: transform 250ms ease-in-out;\n\n  &:hover {\n    transform: scale(1.2);\n  }\n`;\n\nexport const StorageInnerWrap = styled.div`\n  position: relative;\n`;\n\nexport const StorageMapWrap = styled.div`\n  text-align: center;\n`;\n\nexport const Image = styled.img`\n  margin: 0 auto;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  font-size: 20px;\n  margin-bottom: 10px;\n`;\n","import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getDeliveryType,\n  getDeliveryStorage,\n  getActiveStore,\n} from '../../redux/selectors';\nimport {\n  setDeliveryType,\n  setDeliveryStorage,\n  setActiveStore,\n} from '../../redux/deliverySlice';\n\nimport mapImage from '../../images/kiev_district.webp';\n\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\n\nimport { StorageSelectedModal } from 'Components/StorageSelectedModal/StorageSelectedModal';\n\nimport {\n  CityBtn,\n  StorageMapWrap,\n  StorageInnerWrap,\n  Image,\n  Title,\n} from './StorageMap.styled';\n\nconst storages = [\n  { id: 1, location: 'Київ, вул. Марка Вовчка, 14 (Куренівка)' },\n  { id: 2, location: 'Київ, пров. Деревообробний , 5  (Видубичі)' },\n  { id: 3, location: 'Київ, пр-т Перемоги, 67. корпус-Nb (м. Нивки)' },\n  { id: 4, location: 'Київ, вул.Бориспільська, 7' },\n];\n\nexport const StorageMap = () => {\n  const dispatch = useDispatch();\n  const deliveryType = useSelector(getDeliveryType);\n  const deliveryStorage = useSelector(getDeliveryStorage);\n  const activeStore = useSelector(getActiveStore);\n\n  const navigate = useNavigate();\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState('');\n\n  const handleClickOpen = (storageLocation, storageId) => {\n    setOpen(true);\n    setSelectedValue(storageLocation);\n    dispatch(setActiveStore(storageId));\n  };\n\n  const handleClose = deliveryType => {\n    setOpen(false);\n    dispatch(setDeliveryType(deliveryType));\n    dispatch(setDeliveryStorage(selectedValue));\n\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  const handleClickNextPage = () => {\n    navigate('/materials');\n  };\n\n  return (\n    <StorageMapWrap>\n      <Title>Оберіть найближчий до Вас склад завантаження</Title>\n      <StorageInnerWrap>\n        {storages.map(({ location, id }) => (\n          <CityBtn\n            type=\"button\"\n            number={id}\n            active={activeStore}\n            onClick={() => handleClickOpen(location, id)}\n          >\n            {id}\n          </CityBtn>\n        ))}\n\n        <Image src={mapImage} alt=\"map of kiyv\" width={600}></Image>\n      </StorageInnerWrap>\n\n      <StorageSelectedModal\n        selectedValue={selectedValue}\n        open={open}\n        onClose={handleClose}\n      />\n      {deliveryStorage && (\n        <Typography variant=\"subtitle1\" component=\"div\">\n          Склад: {deliveryStorage}\n        </Typography>\n      )}\n\n      {deliveryType && (\n        <Typography variant=\"subtitle1\" component=\"div\">\n          Тип доставки:{' '}\n          {deliveryType === 'pickup' ? 'Самовивіз' : 'Доставка автотранспортом'}\n        </Typography>\n      )}\n      <Button\n        variant=\"contained\"\n        onClick={handleClickNextPage}\n        sx={{ mt: 2 }}\n        disabled={deliveryType === ''}\n        color=\"teal\"\n      >\n        Продовжити\n      </Button>\n    </StorageMapWrap>\n  );\n};\n","import { Container } from 'Components/Container/Container';\nimport { StorageMap } from 'Components/StorageMap/StorageMap';\n\nexport default function Home({ materials, onChangeQuantity }) {\n  return (\n    <Container>\n      <StorageMap />\n    </Container>\n  );\n}\n"],"names":["StyledDialogTitle","styled","DialogTitle","theme","colors","primary","deliveryType","type","text","StorageSelectedModal","props","onClose","selectedValue","open","Dialog","sx","fontSize","fontWeight","List","pt","map","ListItem","disableGutters","ListItemButton","onClick","handleListItemClick","ListItemAvatar","Avatar","bgcolor","teal","color","LocalShipping","Person","ListItemText","CityBtn","number","darkAccent","active","accent","StorageInnerWrap","StorageMapWrap","Image","Title","storages","id","location","StorageMap","dispatch","useDispatch","useSelector","getDeliveryType","deliveryStorage","getDeliveryStorage","activeStore","getActiveStore","navigate","useNavigate","useState","setOpen","setSelectedValue","storageLocation","storageId","setActiveStore","src","mapImage","alt","width","setDeliveryType","setDeliveryStorage","window","scrollTo","top","document","documentElement","scrollHeight","behavior","Typography","variant","component","Button","mt","disabled","Home","materials","onChangeQuantity","Container"],"sourceRoot":""}