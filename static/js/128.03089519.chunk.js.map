{"version":3,"file":"static/js/128.03089519.chunk.js","mappings":"0QAwFaA,GAtFgBC,EAAAA,GAAAA,IAAH,8HAQHA,EAAAA,GAAAA,IAAH,mNAWIA,EAAAA,GAAAA,IAAH,qPAiBAA,EAAAA,GAAAA,IAAH,iEAKSA,EAAAA,GAAAA,OAAH,6MAYGA,EAAAA,GAAAA,OAAH,6MAYHA,EAAAA,GAAAA,MAAH,0HAQUA,EAAAA,GAAAA,IAAH,8FAMCA,EAAAA,GAAAA,IAAH,mHAOKA,EAAAA,GAAAA,IAAH,qE,UCrFZC,EAAYD,EAAAA,GAAAA,IAAH,0RAiBTE,EAAaF,EAAAA,GAAAA,IAAH,sPAcVG,EAAiBH,EAAAA,GAAAA,IAAH,0RAgBdI,EAAMJ,EAAAA,GAAAA,IAAH,iEAKHK,GAAcL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,oS,UCrDXO,EAAeP,EAAAA,GAAAA,IAAH,8NAWZQ,EAAoBR,EAAAA,GAAAA,IAAH,8FAMjBS,EAAiBT,EAAAA,GAAAA,IAAH,mPAadU,EAAgBV,EAAAA,GAAAA,IAAH,gEAKbW,EAAoBX,EAAAA,GAAAA,OAAH,wQ,SC5BjBY,EAAc,SAAC,GAMrB,IALLC,EAKI,EALJA,OACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,eACAC,EAEI,EAFJA,MACAC,EACI,EADJA,eAEA,OACE,UAACV,EAAD,YACE,UAACC,EAAD,YACE,SAACC,EAAD,UAAiBI,KACjB,SAACH,EAAD,UAAgBI,QAElB,UAACH,EAAD,CAAmBO,QAAS,kBAAMD,EAAeD,EAArB,EAA6BG,KAAK,SAA9D,UACIJ,EAAgC,mDAAf,+DACjBA,GAGA,SAAC,MAAD,CAAgBK,KAAK,UAFrB,SAAC,MAAD,CAAkBA,KAAK,cAOhC,EC5BYC,EAAgBrB,EAAAA,GAAAA,IAAH,8HAQbsB,EAAUtB,EAAAA,GAAAA,IAAH,mNAWPuB,EAAWvB,EAAAA,GAAAA,IAAH,qPAiBRwB,EAAQxB,EAAAA,GAAAA,IAAH,iEAKLyB,GAAczB,EAAAA,GAAAA,OAAH,6MAYX0B,GAAc1B,EAAAA,GAAAA,OAAH,6MAYX2B,GAAQ3B,EAAAA,GAAAA,MAAH,0HAQL4B,GAAe5B,EAAAA,GAAAA,IAAH,8FAMZ6B,GAAa7B,EAAAA,GAAAA,IAAH,mHCvEV8B,GAAgB,SAAC,GAWvB,IAVLC,EAUI,EAVJA,MACAjB,EASI,EATJA,MACAkB,EAQI,EARJA,YACAC,EAOI,EAPJA,MACAC,EAMI,EANJA,SACAlB,EAKI,EALJA,MACAmB,EAII,EAJJA,IACAC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,aACAC,EACI,EADJA,WAEA,OACE,UAAC,EAAD,YACE,SAAC,EAAD,WACE,gBAAKC,IAAKR,EAAOS,IAAK1B,OAGxB,UAAC,EAAD,YACE,wBAAKA,KACL,uBAAIkB,KACJ,UAAC,EAAD,WAAO,6BAAOC,EAAM,8BAEtB,UAAC,GAAD,YACE,SAAC,GAAD,CACEf,QAAS,kBAAMkB,EAAiBpB,EAAOmB,GAAM,EAApC,EACTM,SAAuB,IAAbP,EAFZ,SAGC,OAGD,SAAC,GAAD,CACEf,KAAK,OACLuB,KAAK,WACLC,MAAOT,EACPU,IAAI,IACJC,SAAU,SAAAC,GAAC,OAAIT,EAAaS,EAAG9B,EAAOmB,EAA3B,KAEb,SAAC,GAAD,CAAajB,QAAS,kBAAMkB,EAAiBpB,EAAOmB,EAAK,EAAnC,EAAtB,SAA6D,UAI/D,UAAC,GAAD,WAAaG,EAAWS,QAAQ,GAAG,4BAGxC,E,gEC7CYC,GAAW,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,MAAOhB,EAAe,EAAfA,SACxC,OACE,UAACjC,EAAD,YACE,yBAAG,sGAAoBiC,EAAS,QAChC,UAAChC,EAAD,YACE,SAAC,OAAD,CAAUkB,KAAK,SAAS,8BAAM,4BAAO6B,EAAO,mBAAW,QAEzD,UAAC9C,EAAD,YACE,SAAC,OAAD,CAAoBiB,KAAK,UACzB,SAAChB,EAAD,UAAK,+BAAY,KAAC,4BAAO8C,EAAM,2BAC/B,SAAC7C,EAAD,CAAa8C,GAAG,SAAShC,KAAK,SAA9B,SAAuC,0DAM9C,E,WCNYiC,GAA0B,WACrC,IAAMC,GAAWC,EAAAA,GAAAA,MACXC,GAAYC,EAAAA,GAAAA,IAAYC,GAAAA,GAE9B,GAA4CC,EAAAA,GAAAA,WAAS,GAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAwCF,EAAAA,GAAAA,WAAS,GAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACA,GAAqCJ,EAAAA,GAAAA,UAAS,GAA9C,eAAOK,EAAP,KAAsBC,EAAtB,KAGMC,EAAiBV,EAAUW,SAAQ,SAAAC,GAAQ,OAAIA,EAASZ,SAAb,IAE3CL,EAAQe,EAAeG,QAAO,SAACC,EAAK1B,GACxC,OAAO0B,EAAM1B,EAAMV,MAAQU,EAAMT,QAClC,GAAE,IAEHoC,EAAAA,GAAAA,YAAU,WAET,GAAE,CAACpB,IAEJ,IAEMd,EAAmB,SAACmC,EAAUC,EAAU7B,GAC5C8B,QAAQC,IAAI,SACZ,IAAMC,EAAU,CAAEJ,SAAAA,EAAUC,SAAAA,EAAU7B,MAAAA,GAEtCU,GAASuB,EAAAA,GAAAA,GAAeD,GACzB,EAEK1D,EAAiB,SAAAD,GACP,MAAVA,EAIU,MAAVA,EAKJqC,GAASwB,EAAAA,GAAAA,IAAe7D,IAJtB8C,GAAgB,SAAAgB,GAAS,OAAKA,CAAL,IAJzBlB,GAAkB,SAAAkB,GAAS,OAAKA,CAAL,GAS9B,EAEKzC,EAAe,SAACS,EAAGyB,EAAUC,GACjC,IAAI7B,EAAQG,EAAEiC,cAAcpC,MAAMqC,OAClCrC,EAAQsC,KAAKC,IAAI,EAAGvC,GAEpB,IAAMgC,EAAU,CAAEJ,SAAAA,EAAUC,SAAAA,EAAU7B,MADtCA,EAAQwC,SAASxC,EAAO,KAExBU,GAAS+B,EAAAA,GAAAA,IAAoBT,GAC9B,EAEKU,EAAcpB,EAAeG,QAAO,SAACC,EAAK1B,GAC9C,OAAO0B,EAAM1B,EAAMM,OAASN,EAAMT,QACnC,GAAE,GAMGoD,EAAgBrB,EAAeG,QAAO,SAACC,EAAK1B,GAChD,OAAO0B,EAAM1B,EAAMT,QACpB,GAAE,GAkBH,OACE,gCACGoD,EAAgB,IACf,SAACtC,GAAD,CACEd,SAAUoD,EACVrC,OAAQoC,EAAYtC,QAAQ,GAC5BG,MAAOA,EAAMH,QAAQ,KAGxBQ,EAAUgC,KAAI,SAACC,EAASxE,GAEvB,OADAyD,QAAQC,IAAIc,IAEV,iCACE,SAAC5E,EAAD,CACEC,OAAQ2E,EAAQ3E,OAChBC,MAAO0E,EAAQC,cACfzE,MAAOA,EACPD,eAAgByE,EAAQzE,eACxBE,eAAgBA,IAEjBuE,EAAQzE,gBACPyE,EAAQjC,UAAUgC,KAAI,SAACpB,EAAUhC,GAC/B,IAAMG,EAAa6B,EAASjC,SAAWiC,EAASlC,MAChD,OACE,SAACH,GAAD,CACEC,MAAOoC,EAASpC,MAChBjB,MAAOqD,EAASrD,MAChBkB,YAAamC,EAASnC,YACtBC,MAAOkC,EAASlC,MAChBC,SAAUiC,EAASjC,SACnBlB,MAAOA,EACPmB,IAAKA,EACLG,WAAYA,EACZF,iBAAkBA,EAClBC,aAAcA,GAGnB,MAGR,KACD,SAACzB,EAAD,CACEC,QAAQ,SAAC,OAAD,CAAiBO,KAAM,GAAIsE,MAAM,SACzC5E,MAAO,mDACPE,MAAO,IACPD,eAAgB4C,EAChB1C,eAAgBA,IAEjB0C,IACC,iCACE,0BACE,6BAAO,oIAEL,oBACEjB,KAAK,OACLG,SAAU,SAAAC,GAvEH,IAACH,EAAOM,EAAPN,EAwEOG,EAxEAG,EAwEGoC,EAvE9BZ,QAAQC,IAAI/B,EAAMgD,OAAOhD,OACzB8B,QAAQC,IAAIzB,GAEVe,EADEf,EAAS,GAAKA,GAAU,IACd,IACHA,EAAS,KAAQA,GAAU,IACxB,KACHA,EAAS,KAAQA,GAAU,IACxB,KACHA,EAAS,KAAQA,GAAU,IACxB,IAEA,sKA6DD,EAJH,WAME,mBAAQN,MAAM,2BAAd,SAAqB,8BACrB,mBAAQA,MAAM,uCAAd,SAAuB,kDAI7B,2BAAK,uGAAqBoB,EAAc,2BACxC,mBACE5C,KAAK,SACLD,QAAS,aAFX,SAGC,uHAKL,SAACN,EAAD,CACEC,QAAQ,SAAC,OAAD,CAAmBO,KAAM,GAAIsE,MAAM,SAC3C5E,MAAO,iFACPE,MAAO,IACPD,eAAgB8C,EAChB5C,eAAgBA,IAEjB4C,IACC,iCACE,2BAAK,4IAA4BwB,EAAY,qBAC7C,2BAAK,yHAAsC,GAAdA,EAAkB,2BAC/C,mBAAQlE,KAAK,SAASD,QA9IL,WAAQ,EA8IzB,SAAiD,sHAKpDoE,EAAgB,IACf,SAACvF,EAAD,WACE,SAACM,EAAD,CAAa8C,GAAG,SAAShC,KAAK,SAA9B,SAAuC,sMAOhD,E,sBC7Lc,SAASyE,GAAT,GAAgD,IAAhCrC,EAA+B,EAA/BA,UAAWnB,EAAoB,EAApBA,iBACxC,OACE,UAACyD,GAAA,EAAD,YAGE,SAAC,KAAD,UAAO,kTACP,SAACzC,GAAD,CACEG,UAAWA,EACXnB,iBAAkBA,MAIzB,C,kFCjBY0D,EAAQ9F,EAAAA,GAAAA,GAAH,mEAKKA,EAAAA,GAAAA,OAAH,oO,uDCPb,IAAMyD,EAAe,SAAAsC,GAAK,OAAIA,EAAMxC,SAAV,C","sources":["Components/CategoriesList/CategoriesList.styled.js","Components/OrderBar/OrderBar.styled.js","Components/CategoryBar/CategoryBar.styled.js","Components/CategoryBar/CategoryBar.jsx","Components/MaterialsList/MaterialsList.styled.js","Components/MaterialsList/MaterialsList.jsx","Components/OrderBar/OrderBar.jsx","Components/CategoriesList/CategoriesList.jsx","pages/HomePage.jsx","pages/HomePage.styled.js","redux/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MaterialsWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n\n  margin-bottom: 20px;\n`;\n\nexport const ImgWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  max-width: 150px;\n  max-height: 150px;\n  border-radius: 5px;\n  border: 1px solid #5f9ea0;\n  overflow: hidden;\n`;\n\nexport const InfoWrap = styled.div`\n  max-width: 500px;\n\n  h2 {\n    font-size: 18px;\n    margin-bottom: 10px;\n    color: #696969;\n    text-decoration: underline;\n  }\n\n  p {\n    font-size: 12px;\n    margin-bottom: 10px;\n    color: #696969;\n  }\n`;\n\nexport const Price = styled.div`\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const IncreaseBtn = styled.button`\n  width: 24px;\n  height: 24px;\n  border-radius: 2px;\n  background-color: #5f9ea0;\n  font-weight: 700;\n  color: #ffffff;\n  border: none;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const DecreaseBtn = styled.button`\n  width: 24px;\n  height: 24px;\n  font-weight: 700;\n  border-radius: 2px;\n  background-color: #5f9ea0;\n  color: #ffffff;\n  border: none;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const Input = styled.input`\n  max-width: 60px;\n  font-size: 28px;\n  outline: none;\n  border: none;\n  text-align: center;\n`;\n\nexport const QuantityWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const TotalPrice = styled.div`\n  font-size: 28px;\n  padding: 10px;\n  border: 1px solid #5f9ea0;\n  border-radius: 5px;\n`;\n\nexport const OrderBtnWrap = styled.div`\n  text-align: center;\n  margin-top: 50px;\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const OrderWrap = styled.div`\n  position: fixed;\n  top: 0;\n  left: 130px;\n  width: 1200px;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 50px;\n\n  padding: 5px 30px;\n  color: #ffffff;\n  background-color: #5f9ea0;\n  border-radius: 10px;\n`;\n\nexport const WeightWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 5px;\n  border-radius: 5px;\n  background-color: #ffffff;\n  color: #696969;\n\n  span {\n    font-weight: 700;\n    margin-left: 5px;\n  }\n`;\nexport const TotalPriceWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  span {\n    display: inline-block;\n    font-weight: 700;\n    margin-left: 5px;\n    padding: 5px;\n    border-radius: 5px;\n    background-color: #ffffff;\n    color: #696969;\n  }\n`;\n\nexport const Sum = styled.div`\n  margin-left: 2px;\n  font-size: 18px;\n`;\n\nexport const OrderButton = styled(Link)`\n  border: none;\n  outline: none;\n  background-color: rgb(23 89 92);\n  color: #fff;\n  margin-left: 10px;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: transform 250ms ease-in-out;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n","import styled from 'styled-components';\n\nexport const CategoryWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 30px;\n  margin-bottom: 20px;\n  border: 2px solid #5f9ea0;\n  padding: 10px 20px;\n  border-radius: 5px;\n`;\n\nexport const CategoryInnerWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const CategoryNumber = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  background-color: #5f9ea0;\n  color: #ffffff;\n  font-weight: 500;\n  margin-right: 10px;\n`;\n\nexport const CategoryTitle = styled.div`\n  color: #696969;\n  font-weight: 500;\n`;\n\nexport const ToogleCategoryBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: 700;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  color: #696969;\n  cursor: pointer;\n\n  &:hover {\n    color: #5f9ea0;\n  }\n`;","import { BiSolidDownArrow, BiSolidUpArrow } from 'react-icons/bi';\nimport {\n  CategoryWrap,\n  CategoryInnerWrap,\n  CategoryNumber,\n  CategoryTitle,\n  ToogleCategoryBtn,\n} from './CategoryBar.styled';\n\nexport const CategoryBar = ({\n  number,\n  title,\n  isCategoryOpen,\n  index,\n  onCategoryOpen,\n}) => {\n  return (\n    <CategoryWrap>\n      <CategoryInnerWrap>\n        <CategoryNumber>{number}</CategoryNumber>\n        <CategoryTitle>{title}</CategoryTitle>\n      </CategoryInnerWrap>\n      <ToogleCategoryBtn onClick={() => onCategoryOpen(index)} type=\"button\">\n        {!isCategoryOpen ? 'Розгорнути' : 'Згорнути'}\n        {!isCategoryOpen ? (\n          <BiSolidDownArrow size=\"18px\" />\n        ) : (\n          <BiSolidUpArrow size=\"18px\" />\n        )}\n      </ToogleCategoryBtn>\n    </CategoryWrap>\n  );\n};\n","import styled from 'styled-components';\n\n\n\nexport const MaterialsWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n\n  margin-bottom: 20px;\n`;\n\nexport const ImgWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  max-width: 150px;\n  max-height: 150px;\n  border-radius: 5px;\n  border: 1px solid #5f9ea0;\n  overflow: hidden;\n`;\n\nexport const InfoWrap = styled.div`\n  max-width: 500px;\n\n  h2 {\n    font-size: 18px;\n    margin-bottom: 10px;\n    color: #696969;\n    text-decoration: underline;\n  }\n\n  p {\n    font-size: 12px;\n    margin-bottom: 10px;\n    color: #696969;\n  }\n`;\n\nexport const Price = styled.div`\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const IncreaseBtn = styled.button`\n  width: 24px;\n  height: 24px;\n  border-radius: 2px;\n  background-color: #5f9ea0;\n  font-weight: 700;\n  color: #ffffff;\n  border: none;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const DecreaseBtn = styled.button`\n  width: 24px;\n  height: 24px;\n  font-weight: 700;\n  border-radius: 2px;\n  background-color: #5f9ea0;\n  color: #ffffff;\n  border: none;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const Input = styled.input`\n  max-width: 60px;\n  font-size: 28px;\n  outline: none;\n  border: none;\n  text-align: center;\n`;\n\nexport const QuantityWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const TotalPrice = styled.div`\n  font-size: 28px;\n  padding: 10px;\n  border: 1px solid #5f9ea0;\n  border-radius: 5px;\n`;\n\n\n","import {\n  MaterialsWrap,\n  ImgWrap,\n  InfoWrap,\n  Price,\n  QuantityWrap,\n  DecreaseBtn,\n  IncreaseBtn,\n  Input,\n  TotalPrice,\n} from './MaterialsList.styled';\n\nexport const MaterialsList = ({\n  image,\n  title,\n  description,\n  price,\n  quantity,\n  index,\n  ind,\n  onChangeQuantity,\n  handleChange,\n  totalPrice,\n}) => {\n  return (\n    <MaterialsWrap>\n      <ImgWrap>\n        <img src={image} alt={title} />\n      </ImgWrap>\n\n      <InfoWrap>\n        <h2>{title}</h2>\n        <p>{description}</p>\n        <Price>Ціна: {price} грн.</Price>\n      </InfoWrap>\n      <QuantityWrap>\n        <DecreaseBtn\n          onClick={() => onChangeQuantity(index, ind, -1)}\n          disabled={quantity === 0}\n        >\n          -\n        </DecreaseBtn>\n        <Input\n          type=\"text\"\n          name=\"quantity\"\n          value={quantity}\n          min=\"1\"\n          onChange={e => handleChange(e, index, ind)}\n        />\n        <IncreaseBtn onClick={() => onChangeQuantity(index, ind, 1)}>\n          +\n        </IncreaseBtn>\n      </QuantityWrap>\n      <TotalPrice>{totalPrice.toFixed(2)} грн.</TotalPrice>\n    </MaterialsWrap>\n  );\n};\n","import {\n  OrderWrap,\n  WeightWrap,\n  TotalPriceWrap,\n  Sum,\n  OrderButton,\n} from './OrderBar.styled';\n\nimport { IoPricetagsOutline } from 'react-icons/io5';\nimport { TbWeight } from 'react-icons/tb';\n\nexport const OrderBar = ({ weight, total, quantity }) => {\n  return (\n    <OrderWrap>\n      <p>Кількість товарів: {quantity} </p>\n      <WeightWrap>\n        <TbWeight size=\"18px\" /> Вага <span>{weight} кг</span>{' '}\n      </WeightWrap>\n      <TotalPriceWrap>\n        <IoPricetagsOutline size=\"18px\" />\n        <Sum>Сума: </Sum> <span>{total} грн.</span>\n        <OrderButton to=\"/order\" type=\"button\">\n          Замовити\n        </OrderButton>\n      </TotalPriceWrap>\n    </OrderWrap>\n  );\n};\n","import { OrderBtnWrap } from './CategoriesList.styled';\n\nimport { OrderButton } from 'Components/OrderBar/OrderBar.styled';\n\nimport { CategoryBar } from 'Components/CategoryBar/CategoryBar';\nimport { MaterialsList } from 'Components/MaterialsList/MaterialsList';\n\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  toggleCategory,\n  changeQuantity,\n  inputChangeQuantity,\n} from '../../redux/materialsSlice';\nimport { getMaterials } from '../../redux/selectors';\n\nimport { OrderBar } from 'Components/OrderBar/OrderBar';\n\nimport { TbTruckDelivery } from 'react-icons/tb';\nimport { GiWeightLiftingUp } from 'react-icons/gi';\n\nexport const MaterialsCategoriesList = () => {\n  const dispatch = useDispatch();\n  const materials = useSelector(getMaterials);\n\n  const [isDeliveryOpen, setIsDeliveryOpen] = useState(false);\n  const [isMovingOpen, setIsMovingOpen] = useState(false);\n  const [deliveryPrice, setDelivery] = useState(0);\n  // const [totalMaterialsPrice, setTotalMaterialsPrice] = useState(0);\n\n  const groupMaterials = materials.flatMap(material => material.materials);\n\n  const total = groupMaterials.reduce((acc, value) => {\n    return acc + value.price * value.quantity;\n  }, 0);\n\n  useEffect(() => {\n    // setTotalMaterialsPrice(prevState => prevState + total);\n  }, [total]);\n\n  const onAddMovingPrice = () => {};\n\n  const onChangeQuantity = (catIndex, matIndex, value) => {\n    console.log('Click');\n    const payload = { catIndex, matIndex, value };\n\n    dispatch(changeQuantity(payload));\n  };\n\n  const onCategoryOpen = index => {\n    if (index === 100) {\n      setIsDeliveryOpen(prevState => !prevState);\n      return;\n    }\n    if (index === 200) {\n      setIsMovingOpen(prevState => !prevState);\n      return;\n    }\n\n    dispatch(toggleCategory(index));\n  };\n\n  const handleChange = (e, catIndex, matIndex) => {\n    let value = e.currentTarget.value.trim();\n    value = Math.max(0, value);\n    value = parseInt(value, 10);\n    const payload = { catIndex, matIndex, value };\n    dispatch(inputChangeQuantity(payload));\n  };\n\n  const totalWeight = groupMaterials.reduce((acc, value) => {\n    return acc + value.weight * value.quantity;\n  }, 0);\n\n  const onAddDeliveryToOrder = value => {\n    // setTotalMaterialsPrice(prevState => prevState + value);\n  };\n\n  const totalQuantity = groupMaterials.reduce((acc, value) => {\n    return acc + value.quantity;\n  }, 0);\n\n  const deliveryCost = (value, weight) => {\n    console.log(value.target.value);\n    console.log(weight);\n    if (weight > 0 && weight <= 2000) {\n      setDelivery(800);\n    } else if (weight > 2000 && weight <= 3000) {\n      setDelivery(1200);\n    } else if (weight > 3000 && weight <= 5000) {\n      setDelivery(1500);\n    } else if (weight > 5000 && weight <= 10000) {\n      setDelivery(2000);\n    } else {\n      setDelivery('розраховується індивідуально');\n    }\n  };\n\n  return (\n    <>\n      {totalQuantity > 0 && (\n        <OrderBar\n          quantity={totalQuantity}\n          weight={totalWeight.toFixed(2)}\n          total={total.toFixed(2)}\n        />\n      )}\n      {materials.map((product, index) => {\n        console.log(product);\n        return (\n          <>\n            <CategoryBar\n              number={product.number}\n              title={product.categoryTitle}\n              index={index}\n              isCategoryOpen={product.isCategoryOpen}\n              onCategoryOpen={onCategoryOpen}\n            />\n            {product.isCategoryOpen &&\n              product.materials.map((material, ind) => {\n                const totalPrice = material.quantity * material.price;\n                return (\n                  <MaterialsList\n                    image={material.image}\n                    title={material.title}\n                    description={material.description}\n                    price={material.price}\n                    quantity={material.quantity}\n                    index={index}\n                    ind={ind}\n                    totalPrice={totalPrice}\n                    onChangeQuantity={onChangeQuantity}\n                    handleChange={handleChange}\n                  />\n                );\n              })}\n          </>\n        );\n      })}\n      <CategoryBar\n        number={<TbTruckDelivery size={16} color=\"#fff\" />}\n        title={'Доставка'}\n        index={100}\n        isCategoryOpen={isDeliveryOpen}\n        onCategoryOpen={onCategoryOpen}\n      />\n      {isDeliveryOpen && (\n        <>\n          <div>\n            <label>\n              Виберіть місто доставки\n              <select\n                name=\"city\"\n                onChange={e => {\n                  deliveryCost(e, totalWeight);\n                }}\n              >\n                <option value=\"Київ\">Київ</option>\n                <option value=\"Ірпінь\">Ірпінь</option>\n              </select>\n            </label>\n          </div>\n          <div> Вартість доставки: {deliveryPrice} грн.</div>\n          <button\n            type=\"button\"\n            onClick={() => onAddDeliveryToOrder(deliveryPrice)}\n          >\n            Додати до замовлення\n          </button>\n        </>\n      )}\n      <CategoryBar\n        number={<GiWeightLiftingUp size={16} color=\"#fff\" />}\n        title={'Розвантаження'}\n        index={200}\n        isCategoryOpen={isMovingOpen}\n        onCategoryOpen={onCategoryOpen}\n      />\n      {isMovingOpen && (\n        <>\n          <div>Загальна вага замовлення - {totalWeight} кг.</div>\n          <div>Вартість вантажників - {totalWeight * 0.6} грн.</div>\n          <button type=\"button\" onClick={onAddMovingPrice}>\n            Додати до замовлення\n          </button>\n        </>\n      )}\n      {totalQuantity > 0 && (\n        <OrderBtnWrap>\n          <OrderButton to=\"/order\" type=\"button\">\n            Переглянути та оформити замовлення\n          </OrderButton>\n        </OrderBtnWrap>\n      )}\n    </>\n  );\n};\n","import { MaterialsCategoriesList } from 'Components/CategoriesList/CategoriesList';\nimport { Container } from 'Components/Container/Container';\n// import { CityBtn } from './HomePage.styled';\n// import map from '../images/isometric-map-of-kyiv-oblast.jpg';\n\nimport { Title } from './HomePage.styled';\n\nexport default function Home({ materials, onChangeQuantity }) {\n  return (\n    <Container>\n      {/* <CityBtn type=\"button\">Київ</CityBtn>\n      <img src={map} alt=\"map of kiyvskiy region\" width={500}></img> */}\n      <Title>Замовлення матеріалів для ручної та машинної штукатурки</Title>\n      <MaterialsCategoriesList\n        materials={materials}\n        onChangeQuantity={onChangeQuantity}\n      />\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  text-align: center;\n  font-size: 22px;\n`;\n\nexport const CityBtn = styled.button`\n  position: absolute;\n  top: 309px;\n  left: 244px;\n  padding: 10px;\n  font-weight: 700;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n\n  &:hover {\n    color: #5f9ea0;\n  }\n`;\n","export const getMaterials = state => state.materials;\n"],"names":["OrderBtnWrap","styled","OrderWrap","WeightWrap","TotalPriceWrap","Sum","OrderButton","Link","CategoryWrap","CategoryInnerWrap","CategoryNumber","CategoryTitle","ToogleCategoryBtn","CategoryBar","number","title","isCategoryOpen","index","onCategoryOpen","onClick","type","size","MaterialsWrap","ImgWrap","InfoWrap","Price","IncreaseBtn","DecreaseBtn","Input","QuantityWrap","TotalPrice","MaterialsList","image","description","price","quantity","ind","onChangeQuantity","handleChange","totalPrice","src","alt","disabled","name","value","min","onChange","e","toFixed","OrderBar","weight","total","to","MaterialsCategoriesList","dispatch","useDispatch","materials","useSelector","getMaterials","useState","isDeliveryOpen","setIsDeliveryOpen","isMovingOpen","setIsMovingOpen","deliveryPrice","setDelivery","groupMaterials","flatMap","material","reduce","acc","useEffect","catIndex","matIndex","console","log","payload","changeQuantity","toggleCategory","prevState","currentTarget","trim","Math","max","parseInt","inputChangeQuantity","totalWeight","totalQuantity","map","product","categoryTitle","color","target","Home","Container","Title","state"],"sourceRoot":""}