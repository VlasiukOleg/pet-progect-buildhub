{"version":3,"file":"static/js/679.ba2e8d72.chunk.js","mappings":"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","sources":["pages/HomePage.styled.js","Components/CategoriesList/CategoriesList.styled.js","Components/OrderBar/OrderBar.styled.js","Components/CategoryBar/CategoryBar.styled.js","Components/CategoryBar/CategoryBar.jsx","Components/MaterialsList/MaterialsList.styled.js","Components/MaterialsList/MaterialsList.jsx","Components/Moving/Moving.styled.js","Components/Moving/Moving.jsx","Components/OrderBar/OrderBar.jsx","utils/calculateDeliveryFee.js","Components/CategoriesList/CategoriesList.jsx","pages/MaterialPage.jsx","redux/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  text-align: center;\n  font-size: 22px;\n`;\n","import styled from 'styled-components';\n\nexport const MaterialsWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n\n  margin-bottom: 20px;\n`;\n\nexport const ImgWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  max-width: 150px;\n  max-height: 150px;\n  border-radius: 5px;\n  border: 1px solid #5f9ea0;\n  overflow: hidden;\n`;\n\nexport const InfoWrap = styled.div`\n  max-width: 500px;\n\n  h2 {\n    font-size: 18px;\n    margin-bottom: 10px;\n    color: #696969;\n    text-decoration: underline;\n  }\n\n  p {\n    font-size: 12px;\n    margin-bottom: 10px;\n    color: #696969;\n  }\n`;\n\nexport const Price = styled.div`\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const IncreaseBtn = styled.button`\n  width: 24px;\n  height: 24px;\n  border-radius: 2px;\n  background-color: #5f9ea0;\n  font-weight: 700;\n  color: #ffffff;\n  border: none;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const DecreaseBtn = styled.button`\n  width: 24px;\n  height: 24px;\n  font-weight: 700;\n  border-radius: 2px;\n  background-color: #5f9ea0;\n  color: #ffffff;\n  border: none;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const Input = styled.input`\n  max-width: 60px;\n  font-size: 28px;\n  outline: none;\n  border: none;\n  text-align: center;\n`;\n\nexport const QuantityWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const TotalPrice = styled.div`\n  font-size: 28px;\n  padding: 10px;\n  border: 1px solid #5f9ea0;\n  border-radius: 5px;\n`;\n\nexport const OrderBtnWrap = styled.div`\n  text-align: center;\n  margin-top: 50px;\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const OrderWrap = styled.div`\n  position: fixed;\n  top: 0;\n  left: 130px;\n  width: 1200px;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 50px;\n\n  padding: 5px 30px;\n  color: #ffffff;\n  background-color: #5f9ea0;\n  border-radius: 10px;\n`;\n\nexport const WeightWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 5px;\n  border-radius: 5px;\n  background-color: #ffffff;\n  color: #696969;\n\n  span {\n    font-weight: 700;\n    margin-left: 5px;\n  }\n`;\nexport const TotalPriceWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  span {\n    display: inline-block;\n    font-weight: 700;\n    margin-left: 5px;\n    padding: 5px;\n    border-radius: 5px;\n    background-color: #ffffff;\n    color: #696969;\n  }\n`;\n\nexport const Sum = styled.div`\n  margin-left: 2px;\n  font-size: 18px;\n`;\n\nexport const OrderButton = styled(Link)`\n  border: none;\n  outline: none;\n  background-color: rgb(23 89 92);\n  color: #fff;\n  margin-left: 10px;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: transform 250ms ease-in-out;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n","import styled from 'styled-components';\n\nexport const CategoryWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 30px;\n  margin-bottom: 20px;\n  border: 2px solid #5f9ea0;\n  padding: 10px 20px;\n  border-radius: 5px;\n`;\n\nexport const CategoryInnerWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const CategoryNumber = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  background-color: #5f9ea0;\n  color: #ffffff;\n  font-weight: 500;\n  margin-right: 10px;\n`;\n\nexport const CategoryTitle = styled.div`\n  color: #696969;\n  font-weight: 500;\n`;\n\nexport const ToogleCategoryBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: 700;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  color: #696969;\n  cursor: pointer;\n\n  &:hover {\n    color: #5f9ea0;\n  }\n`;","import { BiSolidDownArrow, BiSolidUpArrow } from 'react-icons/bi';\nimport {\n  CategoryWrap,\n  CategoryInnerWrap,\n  CategoryNumber,\n  CategoryTitle,\n  ToogleCategoryBtn,\n} from './CategoryBar.styled';\n\nexport const CategoryBar = ({\n  number,\n  title,\n  isCategoryOpen,\n  index,\n  onCategoryOpen,\n}) => {\n  return (\n    <CategoryWrap>\n      <CategoryInnerWrap>\n        <CategoryNumber>{number}</CategoryNumber>\n        <CategoryTitle>{title}</CategoryTitle>\n      </CategoryInnerWrap>\n      <ToogleCategoryBtn onClick={() => onCategoryOpen(index)} type=\"button\">\n        {!isCategoryOpen ? 'Розгорнути' : 'Згорнути'}\n        {!isCategoryOpen ? (\n          <BiSolidDownArrow size=\"18px\" />\n        ) : (\n          <BiSolidUpArrow size=\"18px\" />\n        )}\n      </ToogleCategoryBtn>\n    </CategoryWrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MaterialsWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n\n  margin-bottom: 20px;\n`;\n\nexport const ImgWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  max-width: 150px;\n  max-height: 150px;\n  border-radius: 5px;\n  border: 1px solid #5f9ea0;\n  overflow: hidden;\n`;\n\nexport const InfoWrap = styled.div`\n  max-width: 500px;\n\n  h2 {\n    font-size: 18px;\n    margin-bottom: 10px;\n    color: #696969;\n    text-decoration: underline;\n  }\n\n  p {\n    font-size: 12px;\n    margin-bottom: 10px;\n    color: #696969;\n  }\n`;\n\nexport const Price = styled.div`\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const IncreaseBtn = styled.button`\n  width: 24px;\n  height: 24px;\n  border-radius: 2px;\n  background-color: #5f9ea0;\n  font-weight: 700;\n  color: #ffffff;\n  border: none;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const DecreaseBtn = styled.button`\n  width: 24px;\n  height: 24px;\n  font-weight: 700;\n  border-radius: 2px;\n  background-color: #5f9ea0;\n  color: #ffffff;\n  border: none;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const Input = styled.input`\n  max-width: 60px;\n  font-size: 28px;\n  outline: none;\n  border: none;\n  text-align: center;\n\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n  ::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n`;\n\nexport const QuantityWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const TotalPrice = styled.div`\n  font-size: 28px;\n  padding: 10px;\n  border: 1px solid #5f9ea0;\n  border-radius: 5px;\n`;\n","import {\n  MaterialsWrap,\n  ImgWrap,\n  InfoWrap,\n  Price,\n  QuantityWrap,\n  DecreaseBtn,\n  IncreaseBtn,\n  Input,\n  TotalPrice,\n} from './MaterialsList.styled';\n\nexport const MaterialsList = ({\n  image,\n  title,\n  description,\n  price,\n  quantity,\n  index,\n  ind,\n  onChangeQuantity,\n  handleChange,\n  totalPrice,\n}) => {\n  return (\n    <MaterialsWrap>\n      <ImgWrap>\n        <img src={image} alt={title} />\n      </ImgWrap>\n\n      <InfoWrap>\n        <h2>{title}</h2>\n        <p>{description}</p>\n        <Price>Ціна: {price} грн.</Price>\n      </InfoWrap>\n      <QuantityWrap>\n        <DecreaseBtn\n          onClick={() => onChangeQuantity(index, ind, -1)}\n          disabled={quantity === 0}\n        >\n          -\n        </DecreaseBtn>\n        <Input\n          type=\"number\"\n          name=\"quantity\"\n          value={quantity}\n          min=\"1\"\n          onChange={e => handleChange(e, index, ind)}\n        />\n        <IncreaseBtn onClick={() => onChangeQuantity(index, ind, 1)}>\n          +\n        </IncreaseBtn>\n      </QuantityWrap>\n      <TotalPrice>{totalPrice.toFixed(2)} грн.</TotalPrice>\n    </MaterialsWrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ToogleMovingBtn = styled.button`\n  padding: 10px 20px;\n  border-radius: 5px;\n  background-color: transparent;\n  font-weight: 700;\n  color: ${props =>\n    props.isMovingPriceAdd ? 'rgb(237, 91, 91)' : 'rgb(95, 158, 160)'};\n  cursor: pointer;\n  border: ${props =>\n    props.isMovingPriceAdd\n      ? '1px solid rgb(237, 91, 91)'\n      : '1px solid rgb(95, 158, 160)'};\n\n  /* &:hover {\n    color: rgb(23, 89, 92);\n  } */\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setMovingCost } from '../../redux/movingSlice';\n\nimport { ToogleMovingBtn } from './Moving.styled';\n\nexport const Moving = ({ totalWeight }) => {\n  const [elevatorDistance, setElevatorDistance] = useState(10);\n  const [floor, setFloor] = useState(1);\n  const [elevator, setElevator] = useState('cargo');\n  const [building, setBuilding] = useState('new');\n  const [movingPrice, setMovingPrice] = useState(0);\n  const [isMovingPriceAdd, setIsMovingPriceAdd] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const onAddMovingPriceToOrder = () => {\n    if (isMovingPriceAdd) {\n      dispatch(setMovingCost(0));\n      setIsMovingPriceAdd(prevState => !prevState);\n      return;\n    }\n    dispatch(setMovingCost(movingPrice));\n    setIsMovingPriceAdd(prevState => !prevState);\n  };\n\n  const onChangeElevator = e => {\n    setElevator(e.target.value);\n    setMovingPrice(prevState => Math.round(prevState * 1.15));\n  };\n  const onChangeBuilding = e => {\n    setBuilding(e.target.value);\n    setMovingPrice(prevState => Math.round(prevState * 1.06));\n  };\n  const onChangeFloor = e => {\n    if (floor < e.target.value) {\n      setMovingPrice(prevState => Math.round(prevState * 1.1));\n    } else {\n      setMovingPrice(prevState => Math.round(prevState / 1.1));\n    }\n    console.log(e.target.value);\n    setFloor(e.target.value);\n  };\n\n  useEffect(() => {\n    const calculateMovingFee = weight => {\n      if (weight < 1000 && weight > 0 && elevator === 'cargo') {\n        setMovingPrice(500);\n        return;\n      }\n      if (weight >= 1000 && elevator === 'cargo') {\n        setMovingPrice(weight * 0.6);\n        return;\n      }\n      if (weight < 1000 && weight > 0 && elevator === 'nolift') {\n        setMovingPrice(750);\n        return;\n      }\n      if (weight >= 1000 && elevator === 'nolift' && building === 'new') {\n        setMovingPrice(weight * 0.85);\n      }\n    };\n    if (isMovingPriceAdd) {\n      dispatch(setMovingCost(movingPrice));\n    }\n\n    calculateMovingFee(totalWeight);\n  }, [\n    building,\n    elevator,\n    totalWeight,\n    dispatch,\n    isMovingPriceAdd,\n    movingPrice,\n  ]);\n\n  return (\n    <>\n      <div>Загальна вага - {totalWeight} кг.</div>\n\n      <div>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"elevator\"\n            value=\"passenger\"\n            checked={elevator === 'passenger'}\n            onChange={onChangeElevator}\n          />\n          Пасажирський ліфт\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"elevator\"\n            value=\"cargo\"\n            checked={elevator === 'cargo'}\n            onChange={onChangeElevator}\n          />\n          Вантажний ліфт\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"elevator\"\n            value=\"nolift\"\n            checked={elevator === 'nolift'}\n            onChange={onChangeElevator}\n          />\n          Без ліфта\n        </label>\n      </div>\n\n      {elevator === 'nolift' && (\n        <div>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"building\"\n              value=\"new\"\n              checked={building === 'new'}\n              onChange={onChangeBuilding}\n            />\n            Новий дім/Хрущевка\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"building\"\n              value=\"old\"\n              checked={building === 'old'}\n              onChange={onChangeBuilding}\n            />\n            Сталінка/Царський\n          </label>\n          <label>\n            Поверх\n            <input\n              type=\"number\"\n              name=\"floor\"\n              min=\"1\"\n              value={floor}\n              onChange={onChangeFloor}\n            />\n          </label>\n        </div>\n      )}\n\n      <label>\n        <p>\n          Загальна відстань заносу матеріалу від машини до ліфта, від ліфта до\n          квартири -{elevatorDistance} м.\n        </p>\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"100\"\n          name=\"elevator_distance\"\n          value={elevatorDistance}\n          step=\"5\"\n          onChange={e => setElevatorDistance(e.target.value)}\n        />\n      </label>\n\n      <div>Вартість вантажників - {movingPrice} грн.</div>\n\n      <ToogleMovingBtn\n        type=\"button\"\n        onClick={onAddMovingPriceToOrder}\n        isMovingPriceAdd={isMovingPriceAdd}\n      >\n        {isMovingPriceAdd ? 'Прибрати с замовлення' : 'Додати до замовлення'}\n      </ToogleMovingBtn>\n    </>\n  );\n};\n","import {\n  OrderWrap,\n  WeightWrap,\n  TotalPriceWrap,\n  Sum,\n  OrderButton,\n} from './OrderBar.styled';\n\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setDeliveryPrice } from '../../redux/deliverySlice';\nimport { clearQuantity } from '../../redux/materialsSlice';\nimport { getDeliveryPrice, getDeliveryType } from '../../redux/selectors';\n\nimport { calculateDeliveryFee } from 'utils/calculateDeliveryFee';\n\nimport { IoPricetagsOutline } from 'react-icons/io5';\nimport { TbWeight } from 'react-icons/tb';\nimport { TbTruckDelivery } from 'react-icons/tb';\n\nimport IconButton from '@mui/material/IconButton';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\n\nexport const OrderBar = ({ weight, total, quantity }) => {\n  const deliveryPrice = useSelector(getDeliveryPrice);\n  const deliveryType = useSelector(getDeliveryType);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const value = calculateDeliveryFee(weight);\n    dispatch(setDeliveryPrice(value));\n  }, [dispatch, weight]);\n\n  const onClearOrder = () => {\n    console.log('CLick');\n    dispatch(clearQuantity(0));\n  };\n\n  return (\n    <OrderWrap>\n      <div>\n        <p>\n          Кількість товарів: {quantity}{' '}\n          <IconButton aria-label=\"delete\" onClick={onClearOrder} color=\"error\">\n            <DeleteForeverIcon size=\"small\" />\n          </IconButton>\n        </p>\n      </div>\n\n      <WeightWrap>\n        <TbWeight size=\"18px\" /> Вага <span>{weight} кг</span>{' '}\n      </WeightWrap>\n      {deliveryType === 'delivery' && (\n        <WeightWrap>\n          <TbTruckDelivery size=\"18px\" /> Доставка{' '}\n          <span>{deliveryPrice} грн.</span>{' '}\n        </WeightWrap>\n      )}\n      <TotalPriceWrap>\n        <IoPricetagsOutline size=\"18px\" />\n        <Sum>Сума: </Sum> <span>{total} грн.</span>\n        <OrderButton to=\"/order\" type=\"button\">\n          Замовити\n        </OrderButton>\n      </TotalPriceWrap>\n    </OrderWrap>\n  );\n};\n","export const calculateDeliveryFee = weight => {\n  if (weight > 0 && weight <= 1500) {\n    return 700;\n  } else if (weight > 1500 && weight <= 2050) {\n    return 800;\n  } else if (weight > 2050 && weight <= 3000) {\n    return 1200;\n  } else if (weight > 3000 && weight <= 5000) {\n    return 1500;\n  } else if (weight > 5000 && weight <= 10000) {\n    return 2000;\n  } else if (weight > 10000) {\n    return 'розраховується індивідуально';\n  } else {\n    return 0;\n  }\n};\n","import { OrderBtnWrap } from './CategoriesList.styled';\n\nimport { OrderButton } from 'Components/OrderBar/OrderBar.styled';\n\nimport { CategoryBar } from 'Components/CategoryBar/CategoryBar';\nimport { MaterialsList } from 'Components/MaterialsList/MaterialsList';\nimport { Moving } from 'Components/Moving/Moving';\n\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  toggleCategory,\n  changeQuantity,\n  inputChangeQuantity,\n} from '../../redux/materialsSlice';\nimport { getMaterials } from '../../redux/selectors';\n\nimport { OrderBar } from 'Components/OrderBar/OrderBar';\n\nimport { GiWeightLiftingUp } from 'react-icons/gi';\n\nexport const MaterialsCategoriesList = () => {\n  const dispatch = useDispatch();\n  const materials = useSelector(getMaterials);\n\n  const [isMovingOpen, setIsMovingOpen] = useState(false);\n\n  const groupMaterials = materials.flatMap(material => material.materials);\n  console.log(groupMaterials);\n\n  const total = groupMaterials.reduce((acc, value) => {\n    return acc + value.price * value.quantity;\n  }, 0);\n\n  const onChangeQuantity = (catIndex, matIndex, value) => {\n    console.log('Click');\n    const payload = { catIndex, matIndex, value };\n\n    dispatch(changeQuantity(payload));\n  };\n\n  const onCategoryOpen = index => {\n    if (index === 200) {\n      setIsMovingOpen(prevState => !prevState);\n      return;\n    }\n\n    dispatch(toggleCategory(index));\n  };\n\n  const handleChange = (e, catIndex, matIndex) => {\n    let value = e.currentTarget.value.trim();\n    value = Math.max(0, value);\n    value = parseInt(value, 10);\n    const payload = { catIndex, matIndex, value };\n    dispatch(inputChangeQuantity(payload));\n  };\n\n  const totalWeight = groupMaterials.reduce((acc, value) => {\n    return acc + value.weight * value.quantity;\n  }, 0);\n\n  const totalQuantity = groupMaterials.reduce((acc, value) => {\n    return acc + value.quantity;\n  }, 0);\n\n  return (\n    <>\n      {totalQuantity > 0 && (\n        <OrderBar\n          quantity={totalQuantity}\n          weight={totalWeight.toFixed(2)}\n          total={total.toFixed(2)}\n        />\n      )}\n      {materials.map((product, index) => {\n        console.log(product);\n        return (\n          <>\n            <CategoryBar\n              number={product.number}\n              title={product.categoryTitle}\n              index={index}\n              isCategoryOpen={product.isCategoryOpen}\n              onCategoryOpen={onCategoryOpen}\n            />\n            {product.isCategoryOpen &&\n              product.materials.map((material, ind) => {\n                const totalPrice = material.quantity * material.price;\n                return (\n                  <MaterialsList\n                    image={material.image}\n                    title={material.title}\n                    description={material.description}\n                    price={material.price}\n                    quantity={material.quantity}\n                    index={index}\n                    ind={ind}\n                    totalPrice={totalPrice}\n                    onChangeQuantity={onChangeQuantity}\n                    handleChange={handleChange}\n                  />\n                );\n              })}\n          </>\n        );\n      })}\n      <CategoryBar\n        number={<GiWeightLiftingUp size={16} color=\"#fff\" />}\n        title={'Розвантаження'}\n        index={200}\n        isCategoryOpen={isMovingOpen}\n        onCategoryOpen={onCategoryOpen}\n      />\n      {isMovingOpen && <Moving totalWeight={totalWeight} />}\n      {totalQuantity > 0 && (\n        <OrderBtnWrap>\n          <OrderButton to=\"/order\" type=\"button\">\n            Переглянути та оформити замовлення\n          </OrderButton>\n        </OrderBtnWrap>\n      )}\n    </>\n  );\n};\n","import { MaterialsCategoriesList } from 'Components/CategoriesList/CategoriesList';\nimport { Container } from 'Components/Container/Container';\nimport { useEffect } from 'react';\n\nimport { Title } from './HomePage.styled';\n\nexport default function MaterialsPage({ materials, onChangeQuantity }) {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <Container>\n      <Title>Замовлення матеріалів для ручної та машинної штукатурки</Title>\n      <MaterialsCategoriesList\n        materials={materials}\n        onChangeQuantity={onChangeQuantity}\n      />\n    </Container>\n  );\n}\n","export const getMaterials = state => state.materials;\n\nexport const getDeliveryType = state => state.delivery.deliveryType;\nexport const getDeliveryPrice = state => state.delivery.deliveryPrice;\nexport const getDeliveryStorage = state => state.delivery.deliveryStorage;\n\nexport const getMovingPrice = state => state.moving.movingPrice;\n"],"names":["Title","styled","OrderBtnWrap","OrderWrap","WeightWrap","TotalPriceWrap","Sum","OrderButton","Link","CategoryWrap","CategoryInnerWrap","CategoryNumber","CategoryTitle","ToogleCategoryBtn","CategoryBar","number","title","isCategoryOpen","index","onCategoryOpen","onClick","type","size","MaterialsWrap","ImgWrap","InfoWrap","Price","IncreaseBtn","DecreaseBtn","Input","QuantityWrap","TotalPrice","MaterialsList","image","description","price","quantity","ind","onChangeQuantity","handleChange","totalPrice","src","alt","disabled","name","value","min","onChange","e","toFixed","ToogleMovingBtn","props","isMovingPriceAdd","Moving","totalWeight","useState","elevatorDistance","setElevatorDistance","floor","setFloor","elevator","setElevator","building","setBuilding","movingPrice","setMovingPrice","setIsMovingPriceAdd","dispatch","useDispatch","onChangeElevator","target","prevState","Math","round","onChangeBuilding","useEffect","weight","setMovingCost","checked","console","log","max","step","OrderBar","total","deliveryPrice","useSelector","getDeliveryPrice","deliveryType","getDeliveryType","calculateDeliveryFee","setDeliveryPrice","IconButton","clearQuantity","color","DeleteForever","to","MaterialsCategoriesList","materials","getMaterials","isMovingOpen","setIsMovingOpen","groupMaterials","flatMap","material","reduce","acc","catIndex","matIndex","payload","changeQuantity","toggleCategory","currentTarget","trim","parseInt","inputChangeQuantity","totalQuantity","map","product","categoryTitle","MaterialsPage","window","scrollTo","Container","state","delivery","getDeliveryStorage","deliveryStorage","getMovingPrice","moving"],"sourceRoot":""}