{"version":3,"file":"static/js/656.2cf3e678.chunk.js","mappings":"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","sources":["pages/HomePage.styled.js","Components/CategoriesList/CategoriesList.styled.js","Components/CategoryBar/CategoryBar.styled.js","Components/CategoryBar/CategoryBar.jsx","Components/MaterialsList/MaterialsList.styled.js","Components/MaterialsList/MaterialsList.jsx","Components/Moving/Moving.styled.js","Components/Moving/Moving.jsx","utils/calculateMovingFee.js","Components/OrderBar/OrderBar.styled.js","Components/OrderBar/OrderBar.jsx","utils/calculateDeliveryFee.js","Components/CategoriesList/CategoriesList.jsx","pages/MaterialPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  text-align: center;\n  font-size: 22px;\n`;\n","import styled from 'styled-components';\n\nexport const MaterialsWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n\n  margin-bottom: 20px;\n`;\n\nexport const ImgWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  max-width: 150px;\n  max-height: 150px;\n  border-radius: 5px;\n  border: 1px solid #5f9ea0;\n  overflow: hidden;\n`;\n\nexport const InfoWrap = styled.div`\n  max-width: 500px;\n\n  h2 {\n    font-size: 18px;\n    margin-bottom: 10px;\n    color: #696969;\n    text-decoration: underline;\n  }\n\n  p {\n    font-size: 12px;\n    margin-bottom: 10px;\n    color: #696969;\n  }\n`;\n\nexport const Price = styled.div`\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const IncreaseBtn = styled.button`\n  width: 24px;\n  height: 24px;\n  border-radius: 2px;\n  background-color: #5f9ea0;\n  font-weight: 700;\n  color: #ffffff;\n  border: none;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const DecreaseBtn = styled.button`\n  width: 24px;\n  height: 24px;\n  font-weight: 700;\n  border-radius: 2px;\n  background-color: #5f9ea0;\n  color: #ffffff;\n  border: none;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const Input = styled.input`\n  max-width: 60px;\n  font-size: 28px;\n  outline: none;\n  border: none;\n  text-align: center;\n`;\n\nexport const QuantityWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const TotalPrice = styled.div`\n  font-size: 28px;\n  padding: 10px;\n  border: 1px solid #5f9ea0;\n  border-radius: 5px;\n`;\n\nexport const OrderBtnWrap = styled.div`\n  text-align: center;\n  margin-top: 50px;\n`;\n","import styled from 'styled-components';\n\nexport const CategoryWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 30px;\n  margin-bottom: 20px;\n  border: 2px solid #5f9ea0;\n  padding: 10px 20px;\n  border-radius: 5px;\n`;\n\nexport const CategoryInnerWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const CategoryNumber = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  background-color: #5f9ea0;\n  color: #ffffff;\n  font-weight: 500;\n  margin-right: 10px;\n`;\n\nexport const CategoryTitle = styled.div`\n  color: #696969;\n  font-weight: 500;\n`;\n\nexport const ToogleCategoryBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: 700;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  color: #696969;\n  cursor: pointer;\n\n  &:hover {\n    color: #5f9ea0;\n  }\n`;\n","import { BiSolidDownArrow, BiSolidUpArrow } from 'react-icons/bi';\nimport {\n  CategoryWrap,\n  CategoryInnerWrap,\n  CategoryNumber,\n  CategoryTitle,\n  ToogleCategoryBtn,\n} from './CategoryBar.styled';\n\nexport const CategoryBar = ({\n  number,\n  title,\n  isCategoryOpen,\n  index,\n  onCategoryOpen,\n}) => {\n  return (\n    <CategoryWrap>\n      <CategoryInnerWrap>\n        <CategoryNumber>{number}</CategoryNumber>\n        <CategoryTitle>{title}</CategoryTitle>\n      </CategoryInnerWrap>\n      <ToogleCategoryBtn onClick={() => onCategoryOpen(index)} type=\"button\">\n        {!isCategoryOpen ? 'Розгорнути' : 'Згорнути'}\n        {!isCategoryOpen ? (\n          <BiSolidDownArrow size=\"18px\" />\n        ) : (\n          <BiSolidUpArrow size=\"18px\" />\n        )}\n      </ToogleCategoryBtn>\n    </CategoryWrap>\n  );\n};\n","// import styled from 'styled-components';\nimport styled from '@emotion/styled';\n\nexport const MaterialsWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n\n  margin-bottom: 20px;\n`;\n\nexport const ImgWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  max-width: 150px;\n  max-height: 150px;\n  border-radius: 5px;\n  border: 1px solid #5f9ea0;\n  overflow: hidden;\n`;\n\nexport const InfoWrap = styled.div`\n  max-width: 500px;\n\n  h2 {\n    font-size: 18px;\n    margin-bottom: 10px;\n    color: #696969;\n    text-decoration: underline;\n  }\n\n  p {\n    font-size: 12px;\n    margin-bottom: 10px;\n    color: #696969;\n  }\n`;\n\nexport const Price = styled.div`\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const IncreaseBtn = styled.button`\n  width: 24px;\n  height: 24px;\n  border-radius: 2px;\n  background-color: #5f9ea0;\n  font-weight: 700;\n  color: #ffffff;\n  border: none;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const DecreaseBtn = styled.button`\n  width: 24px;\n  height: 24px;\n  font-weight: 700;\n  border-radius: 2px;\n  background-color: #5f9ea0;\n  color: #ffffff;\n  border: none;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const Input = styled.input`\n  max-width: 60px;\n  font-size: 24px;\n  outline: none;\n  border: none;\n  text-align: center;\n\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n  ::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n`;\n\nexport const QuantityWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const TotalPrice = styled.div`\n  font-size: 24px;\n  padding: 10px;\n  border: 1px solid #5f9ea0;\n  border-radius: 5px;\n`;\n","import {\n  MaterialsWrap,\n  ImgWrap,\n  InfoWrap,\n  Price,\n  QuantityWrap,\n  DecreaseBtn,\n  IncreaseBtn,\n  Input,\n  TotalPrice,\n} from './MaterialsList.styled';\n\nexport const MaterialsList = ({\n  image,\n  title,\n  description,\n  price,\n  quantity,\n  index,\n  ind,\n  onChangeQuantity,\n  handleChange,\n  totalPrice,\n}) => {\n  return (\n    <MaterialsWrap>\n      <ImgWrap>\n        <img src={image} alt={title} />\n      </ImgWrap>\n\n      <InfoWrap>\n        <h2>{title}</h2>\n        <p>{description}</p>\n        <Price>Ціна: {price} грн.</Price>\n      </InfoWrap>\n      <QuantityWrap>\n        <DecreaseBtn\n          onClick={() => onChangeQuantity(index, ind, -1)}\n          disabled={quantity === 0}\n        >\n          -\n        </DecreaseBtn>\n        <Input\n          type=\"number\"\n          name=\"quantity\"\n          value={quantity}\n          min=\"1\"\n          onChange={e => handleChange(e, index, ind)}\n        />\n        <IncreaseBtn onClick={() => onChangeQuantity(index, ind, 1)}>\n          +\n        </IncreaseBtn>\n      </QuantityWrap>\n      <TotalPrice>{totalPrice.toFixed(2)} грн.</TotalPrice>\n    </MaterialsWrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ToogleMovingBtn = styled.button`\n  padding: 10px 20px;\n  border-radius: 5px;\n  background-color: transparent;\n  font-weight: 700;\n  color: ${props =>\n    props.isMovingPriceAdd ? 'rgb(237, 91, 91)' : 'rgb(95, 158, 160)'};\n  cursor: pointer;\n  border: ${props =>\n    props.isMovingPriceAdd\n      ? '1px solid rgb(237, 91, 91)'\n      : '1px solid rgb(95, 158, 160)'};\n\n  /* &:hover {\n    color: rgb(23, 89, 92);\n  } */\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  setMovingCost,\n  toggleMovingPriceToOrder,\n} from '../../redux/movingSlice';\nimport {\n  getMovingPrice,\n  getIsMovingPriceAddToOrder,\n} from '../../redux/selectors';\n\nimport { ToogleMovingBtn } from './Moving.styled';\n\nimport { calculateMovingFee } from 'utils/calculateMovingFee';\n\nexport const Moving = ({ totalWeight }) => {\n  const [distance, setDistance] = useState(20);\n  const [floor, setFloor] = useState(1);\n  const [elevator, setElevator] = useState('cargo');\n  const [building, setBuilding] = useState('new');\n\n  const movingPrice = useSelector(getMovingPrice);\n  const isMovingPriceAddToOrder = useSelector(getIsMovingPriceAddToOrder);\n\n  const dispatch = useDispatch();\n\n  const onAddMovingPrice = () => {\n    dispatch(toggleMovingPriceToOrder());\n  };\n\n  useEffect(() => {\n    if (elevator !== 'nolift') {\n      setFloor(1);\n      setBuilding('new');\n    }\n    const movingFee = calculateMovingFee(\n      totalWeight,\n      elevator,\n      distance,\n      building,\n      floor\n    );\n\n    dispatch(setMovingCost(Math.round(movingFee)));\n  }, [totalWeight, dispatch, elevator, distance, floor, building]);\n\n  return (\n    <>\n      <div>Загальна вага - {totalWeight} кг.</div>\n\n      <div>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"elevator\"\n            value=\"passenger\"\n            checked={elevator === 'passenger'}\n            onChange={e => setElevator(e.target.value)}\n          />\n          Пасажирський ліфт\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"elevator\"\n            value=\"cargo\"\n            checked={elevator === 'cargo'}\n            onChange={e => setElevator(e.target.value)}\n          />\n          Вантажний ліфт\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"elevator\"\n            value=\"nolift\"\n            checked={elevator === 'nolift'}\n            onChange={e => setElevator(e.target.value)}\n          />\n          Без ліфта\n        </label>\n      </div>\n\n      {elevator === 'nolift' && (\n        <div>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"building\"\n              value=\"new\"\n              checked={building === 'new'}\n              onChange={e => setBuilding(e.target.value)}\n            />\n            Новий дім/Хрущевка\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"building\"\n              value=\"old\"\n              checked={building === 'old'}\n              onChange={e => setBuilding(e.target.value)}\n            />\n            Сталінка/Царський\n          </label>\n          <label>\n            Поверх\n            <input\n              type=\"number\"\n              name=\"floor\"\n              min=\"1\"\n              value={floor}\n              onChange={e => setFloor(e.target.value)}\n            />\n          </label>\n        </div>\n      )}\n\n      <label>\n        <p>\n          Приблизна загальна відстань заносу матеріалу від машини до ліфта, від\n          ліфта до квартири -{distance} м.\n        </p>\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"100\"\n          name=\"elevator_distance\"\n          value={distance}\n          step=\"5\"\n          onChange={e => setDistance(Number(e.target.value))}\n        />\n      </label>\n\n      <div>Вартість вантажників - {movingPrice} грн.</div>\n\n      <ToogleMovingBtn\n        type=\"button\"\n        onClick={onAddMovingPrice}\n        isMovingPriceAdd={isMovingPriceAddToOrder}\n      >\n        {isMovingPriceAddToOrder\n          ? 'Прибрати з замовлення'\n          : 'Додати до замовлення'}\n      </ToogleMovingBtn>\n    </>\n  );\n};\n","const MIN_PRICE = 400;\nconst BASE_PRICE = 0.5;\nconst PRICE_PER_FLOOR = 0.25;\n\nexport const calculateMovingFee = (\n  weight,\n  elevator,\n  distance,\n  building,\n  floor\n) => {\n  let movingFee = 0;\n\n  if (weight > 0 && weight < 1000) {\n    movingFee = MIN_PRICE;\n  } else {\n    movingFee = BASE_PRICE * weight;\n  }\n\n  if (elevator === 'passenger') {\n    movingFee *= 1.15;\n  }\n\n  if (floor > 1) {\n    movingFee =\n      building === 'old'\n        ? (BASE_PRICE + (PRICE_PER_FLOOR + 0.05) * (floor - 1)) * weight\n        : (BASE_PRICE + PRICE_PER_FLOOR * (floor - 1)) * weight;\n  }\n\n  if (distance <= 20) {\n    movingFee *= 1;\n  } else if (distance > 20 && distance < 35) {\n    movingFee *= 1.2;\n  } else if (distance >= 35 && distance < 45) {\n    movingFee *= 1.4;\n  } else if (distance >= 45 && distance <= 50) {\n    movingFee *= 1.5;\n  } else if (distance > 50) {\n    movingFee *= 2;\n  }\n  return movingFee;\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const OrderWrap = styled.div`\n  position: fixed;\n  top: ${props => (props.scroll > 48 ? '0' : '48px')};\n  left: 0;\n  width: 100%;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 50px;\n\n  padding: 5px 30px;\n  color: #ffffff;\n  background-color: #80cbc4;\n  border-radius: 10px;\n\n  transition: top 250ms ease-in-out;\n`;\n\nexport const WeightWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 5px;\n  border-radius: 5px;\n  background-color: #ffffff;\n  color: #696969;\n\n  span {\n    font-weight: 700;\n    margin-left: 5px;\n  }\n`;\nexport const TotalPriceWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  span {\n    display: inline-block;\n    font-weight: 700;\n    margin-left: 5px;\n    padding: 5px;\n    border-radius: 5px;\n    background-color: #ffffff;\n    color: #696969;\n  }\n`;\n\nexport const Sum = styled.div`\n  margin-left: 2px;\n  font-size: 18px;\n`;\n\nexport const OrderButton = styled(Link)`\n  border: none;\n  outline: none;\n  background-color: rgb(23 89 92);\n  color: #fff;\n  margin-left: 10px;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: transform 250ms ease-in-out;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n","import { useState } from 'react';\n\nimport { OrderWrap, WeightWrap, TotalPriceWrap, Sum } from './OrderBar.styled';\n\nimport { Link as OrderLink } from 'react-router-dom';\n\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setDeliveryPrice } from '../../redux/deliverySlice';\nimport { clearQuantity } from '../../redux/materialsSlice';\nimport {\n  getDeliveryPrice,\n  getDeliveryType,\n  getIsMovingPriceAddToOrder,\n  getMovingPrice,\n} from '../../redux/selectors';\n\nimport { calculateDeliveryFee } from 'utils/calculateDeliveryFee';\n\nimport { IoPricetagsOutline } from 'react-icons/io5';\nimport { TbWeight } from 'react-icons/tb';\nimport { TbTruckDelivery } from 'react-icons/tb';\nimport { FaPeopleCarry } from 'react-icons/fa';\n\nimport IconButton from '@mui/material/IconButton';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport Button from '@mui/material/Button';\n\nexport const OrderBar = ({ weight, total, quantity }) => {\n  const [scrollPosition, setScrollPosition] = useState(0);\n\n  const deliveryPrice = useSelector(getDeliveryPrice);\n  const deliveryType = useSelector(getDeliveryType);\n  const isMovingPriceAddToOrder = useSelector(getIsMovingPriceAddToOrder);\n  const movingPrice = useSelector(getMovingPrice);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    function handleScroll() {\n      setScrollPosition(window.scrollY);\n    }\n\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  useEffect(() => {\n    const deliveryFee = calculateDeliveryFee(weight);\n    dispatch(setDeliveryPrice(deliveryFee));\n  }, [dispatch, weight]);\n\n  const onClearOrder = () => {\n    console.log('CLick');\n    dispatch(clearQuantity(0));\n  };\n\n  return (\n    <OrderWrap scroll={scrollPosition}>\n      <div>\n        <p>\n          Кількість товарів: {quantity}{' '}\n          <IconButton aria-label=\"delete\" onClick={onClearOrder} color=\"error\">\n            <DeleteForeverIcon size=\"small\" />\n          </IconButton>\n        </p>\n      </div>\n\n      <WeightWrap>\n        <TbWeight size=\"18px\" />\n        <span>{weight} кг</span>{' '}\n      </WeightWrap>\n      {deliveryType === 'delivery' && (\n        <WeightWrap>\n          <TbTruckDelivery size=\"18px\" />\n          <span>{deliveryPrice} грн.</span>{' '}\n        </WeightWrap>\n      )}\n      {isMovingPriceAddToOrder && (\n        <WeightWrap>\n          <FaPeopleCarry size=\"18px\" />\n          <span>{movingPrice} грн.</span>{' '}\n        </WeightWrap>\n      )}\n      <TotalPriceWrap>\n        <IoPricetagsOutline size=\"18px\" />\n        <Sum>Сума: </Sum> <span>{total} грн.</span>\n      </TotalPriceWrap>\n      <Button\n        variant=\"contained\"\n        color=\"teal\"\n        to=\"/order\"\n        component={OrderLink}\n      >\n        Замовити\n      </Button>\n    </OrderWrap>\n  );\n};\n","export const calculateDeliveryFee = weight => {\n  if (weight > 0 && weight <= 1500) {\n    return 700;\n  } else if (weight > 1500 && weight <= 2050) {\n    return 800;\n  } else if (weight > 2050 && weight <= 3000) {\n    return 1200;\n  } else if (weight > 3000 && weight <= 5000) {\n    return 1500;\n  } else if (weight > 5000 && weight <= 10000) {\n    return 2000;\n  } else if (weight > 10000) {\n    return 'розраховується індивідуально';\n  } else {\n    return 0;\n  }\n};\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link as OrderLink } from 'react-router-dom';\n\nimport { FaPeopleCarry } from 'react-icons/fa';\nimport Button from '@mui/material/Button';\n\nimport { OrderBtnWrap } from './CategoriesList.styled';\n\nimport { CategoryBar } from 'Components/CategoryBar/CategoryBar';\nimport { MaterialsList } from 'Components/MaterialsList/MaterialsList';\nimport { Moving } from 'Components/Moving/Moving';\nimport { OrderBar } from 'Components/OrderBar/OrderBar';\n\nimport {\n  toggleCategory,\n  changeQuantity,\n  inputChangeQuantity,\n} from '../../redux/materialsSlice';\nimport { getMaterials } from '../../redux/selectors';\n\nexport const MaterialsCategoriesList = () => {\n  const dispatch = useDispatch();\n  const materials = useSelector(getMaterials);\n\n  const [isMovingOpen, setIsMovingOpen] = useState(false);\n\n  const groupMaterials = materials.flatMap(material => material.materials);\n\n  const total = groupMaterials.reduce((acc, value) => {\n    return acc + value.price * value.quantity;\n  }, 0);\n\n  const onChangeQuantity = (catIndex, matIndex, value) => {\n    const payload = { catIndex, matIndex, value };\n\n    dispatch(changeQuantity(payload));\n  };\n\n  const onCategoryOpen = index => {\n    if (index === 200) {\n      setIsMovingOpen(prevState => !prevState);\n      return;\n    }\n\n    dispatch(toggleCategory(index));\n  };\n\n  const handleChange = (e, catIndex, matIndex) => {\n    let value = e.currentTarget.value.trim();\n    value = Math.max(0, value);\n    value = parseInt(value, 10);\n    const payload = { catIndex, matIndex, value };\n    dispatch(inputChangeQuantity(payload));\n  };\n\n  const totalWeight = groupMaterials.reduce((acc, value) => {\n    return acc + value.weight * value.quantity;\n  }, 0);\n\n  const totalQuantity = groupMaterials.reduce((acc, value) => {\n    return acc + value.quantity;\n  }, 0);\n\n  return (\n    <>\n      {totalQuantity > 0 && (\n        <OrderBar\n          quantity={totalQuantity}\n          weight={totalWeight.toFixed(2)}\n          total={total.toFixed(2)}\n        />\n      )}\n      {materials.map((product, index) => {\n        return (\n          <>\n            <CategoryBar\n              number={product.number}\n              title={product.categoryTitle}\n              index={index}\n              isCategoryOpen={product.isCategoryOpen}\n              onCategoryOpen={onCategoryOpen}\n            />\n            {product.isCategoryOpen &&\n              product.materials.map((material, ind) => {\n                const totalPrice = material.quantity * material.price;\n                return (\n                  <MaterialsList\n                    image={material.image}\n                    title={material.title}\n                    description={material.description}\n                    price={material.price}\n                    quantity={material.quantity}\n                    index={index}\n                    ind={ind}\n                    totalPrice={totalPrice}\n                    onChangeQuantity={onChangeQuantity}\n                    handleChange={handleChange}\n                  />\n                );\n              })}\n          </>\n        );\n      })}\n      <CategoryBar\n        number={<FaPeopleCarry size={16} color=\"#fff\" />}\n        title={'Розвантаження'}\n        index={200}\n        isCategoryOpen={isMovingOpen}\n        onCategoryOpen={onCategoryOpen}\n      />\n      {isMovingOpen && <Moving totalWeight={totalWeight} />}\n      {totalQuantity > 0 && (\n        <OrderBtnWrap>\n          <Button\n            variant=\"contained\"\n            color=\"teal\"\n            to=\"/order\"\n            component={OrderLink}\n          >\n            Переглянути та оформити замовлення\n          </Button>\n        </OrderBtnWrap>\n      )}\n    </>\n  );\n};\n","import { MaterialsCategoriesList } from 'Components/CategoriesList/CategoriesList';\nimport { useEffect } from 'react';\n\nimport { Title } from './HomePage.styled';\n\nexport default function MaterialsPage({ materials, onChangeQuantity }) {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <>\n      <Title>Замовлення матеріалів для ручної та машинної штукатурки</Title>\n      <MaterialsCategoriesList\n        materials={materials}\n        onChangeQuantity={onChangeQuantity}\n      />\n    </>\n  );\n}\n"],"names":["Title","styled","OrderBtnWrap","CategoryWrap","CategoryInnerWrap","CategoryNumber","CategoryTitle","ToogleCategoryBtn","CategoryBar","number","title","isCategoryOpen","index","onCategoryOpen","onClick","type","size","MaterialsWrap","ImgWrap","InfoWrap","Price","IncreaseBtn","DecreaseBtn","Input","QuantityWrap","TotalPrice","MaterialsList","image","description","price","quantity","ind","onChangeQuantity","handleChange","totalPrice","src","alt","disabled","name","value","min","onChange","e","toFixed","ToogleMovingBtn","props","isMovingPriceAdd","Moving","totalWeight","useState","distance","setDistance","floor","setFloor","elevator","setElevator","building","setBuilding","movingPrice","useSelector","getMovingPrice","isMovingPriceAddToOrder","getIsMovingPriceAddToOrder","dispatch","useDispatch","useEffect","movingFee","weight","calculateMovingFee","setMovingCost","Math","round","checked","target","max","step","Number","toggleMovingPriceToOrder","OrderWrap","scroll","WeightWrap","TotalPriceWrap","Sum","Link","OrderBar","total","scrollPosition","setScrollPosition","deliveryPrice","getDeliveryPrice","deliveryType","getDeliveryType","handleScroll","window","scrollY","addEventListener","removeEventListener","deliveryFee","calculateDeliveryFee","setDeliveryPrice","IconButton","console","log","clearQuantity","color","DeleteForever","Button","variant","to","component","OrderLink","MaterialsCategoriesList","materials","getMaterials","isMovingOpen","setIsMovingOpen","groupMaterials","flatMap","material","reduce","acc","catIndex","matIndex","payload","changeQuantity","toggleCategory","prevState","currentTarget","trim","parseInt","inputChangeQuantity","totalQuantity","map","product","categoryTitle","MaterialsPage","scrollTo"],"sourceRoot":""}